{"meta":{"version":1,"warehouse":"4.0.2"},"models":{"Asset":[{"_id":"themes/cactus/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/cactus/source/js/main.js","path":"js/main.js","modified":0,"renderable":1},{"_id":"themes/cactus/source/css/rtl.styl","path":"css/rtl.styl","modified":0,"renderable":1},{"_id":"themes/cactus/source/js/search.js","path":"js/search.js","modified":0,"renderable":1},{"_id":"themes/cactus/source/images/apple-touch-icon.png","path":"images/apple-touch-icon.png","modified":0,"renderable":1},{"_id":"themes/cactus/source/images/favicon.ico","path":"images/favicon.ico","modified":0,"renderable":1},{"_id":"themes/cactus/source/images/logo.png","path":"images/logo.png","modified":0,"renderable":1},{"_id":"themes/cactus/source/images/favicon-192x192.png","path":"images/favicon-192x192.png","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/clipboard/clipboard.min.js","path":"lib/clipboard/clipboard.min.js","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/jquery/jquery.min.js","path":"lib/jquery/jquery.min.js","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGL-Bold.ttf","path":"lib/meslo-LG/MesloLGL-Bold.ttf","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGL-BoldItalic.ttf","path":"lib/meslo-LG/MesloLGL-BoldItalic.ttf","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGL-Italic.ttf","path":"lib/meslo-LG/MesloLGL-Italic.ttf","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGL-Regular.ttf","path":"lib/meslo-LG/MesloLGL-Regular.ttf","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGM-Bold.ttf","path":"lib/meslo-LG/MesloLGM-Bold.ttf","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGM-BoldItalic.ttf","path":"lib/meslo-LG/MesloLGM-BoldItalic.ttf","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGM-Regular.ttf","path":"lib/meslo-LG/MesloLGM-Regular.ttf","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGS-BoldItalic.ttf","path":"lib/meslo-LG/MesloLGS-BoldItalic.ttf","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGS-Bold.ttf","path":"lib/meslo-LG/MesloLGS-Bold.ttf","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGM-Italic.ttf","path":"lib/meslo-LG/MesloLGM-Italic.ttf","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGS-Italic.ttf","path":"lib/meslo-LG/MesloLGS-Italic.ttf","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGS-Regular.ttf","path":"lib/meslo-LG/MesloLGS-Regular.ttf","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Black.eot","path":"lib/vazir-font/Vazir-Black.eot","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Black.woff","path":"lib/vazir-font/Vazir-Black.woff","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Black.woff2","path":"lib/vazir-font/Vazir-Black.woff2","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Bold.eot","path":"lib/vazir-font/Vazir-Bold.eot","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Bold.ttf","path":"lib/vazir-font/Vazir-Bold.ttf","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Bold.woff","path":"lib/vazir-font/Vazir-Bold.woff","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Black.ttf","path":"lib/vazir-font/Vazir-Black.ttf","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Bold.woff2","path":"lib/vazir-font/Vazir-Bold.woff2","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Light.ttf","path":"lib/vazir-font/Vazir-Light.ttf","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Light.eot","path":"lib/vazir-font/Vazir-Light.eot","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Light.woff2","path":"lib/vazir-font/Vazir-Light.woff2","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Medium.eot","path":"lib/vazir-font/Vazir-Medium.eot","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Medium.ttf","path":"lib/vazir-font/Vazir-Medium.ttf","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Medium.woff","path":"lib/vazir-font/Vazir-Medium.woff","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Medium.woff2","path":"lib/vazir-font/Vazir-Medium.woff2","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Regular.eot","path":"lib/vazir-font/Vazir-Regular.eot","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Regular.ttf","path":"lib/vazir-font/Vazir-Regular.ttf","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Regular.woff","path":"lib/vazir-font/Vazir-Regular.woff","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Regular.woff2","path":"lib/vazir-font/Vazir-Regular.woff2","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Light.woff","path":"lib/vazir-font/Vazir-Light.woff","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Thin.ttf","path":"lib/vazir-font/Vazir-Thin.ttf","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Thin.woff","path":"lib/vazir-font/Vazir-Thin.woff","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Thin.woff2","path":"lib/vazir-font/Vazir-Thin.woff2","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Variable.eot","path":"lib/vazir-font/Vazir-Variable.eot","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Thin.eot","path":"lib/vazir-font/Vazir-Thin.eot","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Variable.ttf","path":"lib/vazir-font/Vazir-Variable.ttf","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Variable.woff","path":"lib/vazir-font/Vazir-Variable.woff","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/font-face.css","path":"lib/vazir-font/font-face.css","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Variable.woff2","path":"lib/vazir-font/Vazir-Variable.woff2","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/font-awesome/css/all.min.css","path":"lib/font-awesome/css/all.min.css","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/justified-gallery/css/justifiedGallery.min.css","path":"lib/justified-gallery/css/justifiedGallery.min.css","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/justified-gallery/js/jquery.justifiedGallery.min.js","path":"lib/justified-gallery/js/jquery.justifiedGallery.min.js","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-brands-400.ttf","path":"lib/font-awesome/webfonts/fa-brands-400.ttf","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-brands-400.woff2","path":"lib/font-awesome/webfonts/fa-brands-400.woff2","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-regular-400.ttf","path":"lib/font-awesome/webfonts/fa-regular-400.ttf","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-regular-400.woff2","path":"lib/font-awesome/webfonts/fa-regular-400.woff2","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-solid-900.ttf","path":"lib/font-awesome/webfonts/fa-solid-900.ttf","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-solid-900.woff2","path":"lib/font-awesome/webfonts/fa-solid-900.woff2","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-v4compatibility.ttf","path":"lib/font-awesome/webfonts/fa-v4compatibility.ttf","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-v4compatibility.woff2","path":"lib/font-awesome/webfonts/fa-v4compatibility.woff2","modified":0,"renderable":1},{"_id":"themes/cactus/source/images/semih.png","path":"images/semih.png","modified":0,"renderable":1},{"_id":"themes/cactus/source/images/s.png","path":"images/s.png","modified":0,"renderable":1}],"Cache":[{"_id":"source/_posts/hello.md","hash":"4fea97b90329df7f0ebdeb49c8760ac7d952821f","modified":1690825287998},{"_id":"source/_posts/hello-world.md","hash":"7d98d6592de80fdcd2949bd7401cec12afd98cdf","modified":1690825094538},{"_id":"source/about/index.md","hash":"c39f329aad91e502b851487099e77483031e3da0","modified":1690825281702},{"_id":"public/about/index.html","hash":"d1ff737348e7e2405a6943bdda9b68d9a2f42bb1","modified":1691140442508},{"_id":"public/2023/07/31/hello/index.html","hash":"132b9e9c9fb9c13992478034a8042d9244eb4a70","modified":1691141550868},{"_id":"public/2023/07/31/hello-world/index.html","hash":"33139e04f9f8224389c64efe59990d2dbcdf6b97","modified":1690825581614},{"_id":"public/archives/index.html","hash":"c66e1fca5d5fed4782a38851ffa44f31508a0d60","modified":1691144283864},{"_id":"public/archives/2023/index.html","hash":"6ec7171f09124a342bd9ec0bfe53d97dbc95424d","modified":1691144283864},{"_id":"public/archives/2023/07/index.html","hash":"0d60f51575b6147373b85507aea3756ef75fd591","modified":1691141160325},{"_id":"public/index.html","hash":"22de430707fb4b9a1a064ba632dedd48a276e307","modified":1691144283864},{"_id":"themes/cactus/.jshintrc","hash":"2548bd6ce44422edc7e6f9f68061ab47f26c4f57","modified":1690825392133},{"_id":"themes/cactus/README.md","hash":"52fafba48b0c792478e134a659bc8f0f61b4557b","modified":1690825392133},{"_id":"themes/cactus/_config.yml","hash":"41450dd104f9778755a1d8ae3c4e6b6ba767b3cb","modified":1691143200240},{"_id":"themes/cactus/LICENSE","hash":"346ece39a983b0e7858c11f785cd846cef9eb875","modified":1690825392133},{"_id":"themes/cactus/.stylintrc","hash":"eb5f48e83657928cb0cbee031373b2cd36ca0083","modified":1690825392133},{"_id":"themes/cactus/package.json","hash":"dbb0a486006e7d4ecdb4b005b6a9b264b5d542dc","modified":1690825392137},{"_id":"themes/cactus/languages/ar.yml","hash":"81a88b0593fc89de3118d686681b1f69883c847b","modified":1690825392134},{"_id":"themes/cactus/.gitignore","hash":"72267ee409a324fc197c150b3c4bf28b87b709a8","modified":1690825392133},{"_id":"themes/cactus/languages/ca.yml","hash":"b79dd2c21dc6697c635e92db1f661a4b8d5d2305","modified":1690825392134},{"_id":"themes/cactus/languages/es.yml","hash":"2b1fc8b0d636123e9ee39017fa20053bd1913a5a","modified":1690825392134},{"_id":"themes/cactus/gulpfile.js","hash":"70d419549ba72e0906fd2fc8103701142eb883a7","modified":1690825392134},{"_id":"themes/cactus/languages/de.yml","hash":"43b2f4e078b042aaae0377a4235216a51ed82e0d","modified":1690825392134},{"_id":"themes/cactus/languages/en.yml","hash":"6a84970bf69c3e9490e5382747ca2b4c4b4dccde","modified":1690825392134},{"_id":"themes/cactus/languages/default.yml","hash":"6a84970bf69c3e9490e5382747ca2b4c4b4dccde","modified":1690825392134},{"_id":"themes/cactus/languages/fa.yml","hash":"63f32e50953af1c4bd0308a4fca5862b5287c2cb","modified":1690825392134},{"_id":"themes/cactus/languages/fr.yml","hash":"5c07406998f19d219a5a7b65c0d88b6b023f85b2","modified":1690825392134},{"_id":"themes/cactus/languages/nl.yml","hash":"ac0573352ad2c737a7686bcca498b985e7bd6447","modified":1690825392134},{"_id":"themes/cactus/languages/it.yml","hash":"62800bcae1f2d2454f87f4bcf4d7593848424f61","modified":1690825392134},{"_id":"themes/cactus/languages/pl.yml","hash":"8a2d6dc874d86c38d42c2c861c39590647b5d536","modified":1690825392134},{"_id":"themes/cactus/languages/ru.yml","hash":"81b57fcd1977ef534f4bf303dbc1b4710cc7f057","modified":1690825392135},{"_id":"themes/cactus/languages/kr.yml","hash":"651fb83991c91b13b53ed55740e5402cf0f1c5e8","modified":1690825392134},{"_id":"themes/cactus/languages/zh-CN.yml","hash":"d016060817311addb4c528de440126b975038c31","modified":1690825392135},{"_id":"themes/cactus/languages/tr.yml","hash":"2702914007e6bade9d6861078c0e179ac05bf48c","modified":1690825392135},{"_id":"themes/cactus/languages/pt-br.yml","hash":"4859aba788a050c2d5d0b997693b0c8c24b349f7","modified":1690825392135},{"_id":"themes/cactus/layout/archive.ejs","hash":"8e9bb1199694b229d2a3de1c3a55188a28e6f5e7","modified":1690825392137},{"_id":"themes/cactus/layout/index.ejs","hash":"fb73e020655ec4696eb7f91a350bf3b9c0fa2755","modified":1690825392137},{"_id":"themes/cactus/layout/layout.ejs","hash":"e03062a5a70d71dff9f09dd86769d1a13b33afd9","modified":1690825392137},{"_id":"themes/cactus/languages/vi.yml","hash":"f84893c3ec3e45875c90069e14b17ed3016ed973","modified":1690825392135},{"_id":"themes/cactus/languages/zh-TW.yml","hash":"2f4e050c9b35a67f4a7278cec3a949533c2ac16a","modified":1690825392135},{"_id":"themes/cactus/layout/page.ejs","hash":"c5465d5315a7544aa466b01fd8cfb62917a8bb1d","modified":1690825392137},{"_id":"themes/cactus/scripts/error_404.js","hash":"f83b290e47cb78a2754152fccc34e571a72087bd","modified":1690825392137},{"_id":"themes/cactus/layout/post.ejs","hash":"f8eac342118298447ef38c21f9560a359e488395","modified":1690825392137},{"_id":"themes/cactus/scripts/meta.js","hash":"654868666b6573b2cee7e750b47ad8a3c2ee13a0","modified":1690825392137},{"_id":"themes/cactus/scripts/merge-configs.js","hash":"2048c3415d96b17b9d84aa44bc0c25f1210525f8","modified":1690825392137},{"_id":"themes/cactus/scripts/cdn.js","hash":"887edec364d51efa7c524446483188c6ad05adaf","modified":1690825392137},{"_id":"themes/cactus/scripts/thumbnail.js","hash":"df8829fd8c3119650037eba5ec11bdce06acff9d","modified":1690825392137},{"_id":"themes/cactus/scripts/page_title.js","hash":"fa662dbdb82779af1b95e35ed7ccdf4866a53dee","modified":1690825392137},{"_id":"themes/cactus/layout/_partial/header.ejs","hash":"21d60f0bb82367cc2bee0c7eb3c06c7f5ab56a6d","modified":1690825392136},{"_id":"themes/cactus/layout/404.ejs","hash":"b911da998c160cceb8cd7c4dae709a1374ed2491","modified":1690825392135},{"_id":"themes/cactus/layout/_partial/head.ejs","hash":"4709e17487315e8f0a5b38f0611f0244f16fdd87","modified":1690825392136},{"_id":"themes/cactus/layout/_partial/footer.ejs","hash":"12fd63b51472c9c5b8b7d167eb1a96bf1d686c20","modified":1690825392135},{"_id":"themes/cactus/layout/_partial/google_analytics.ejs","hash":"64aeee0fdfc06207573ddbf8b91f6d3f007ccea9","modified":1690825392135},{"_id":"themes/cactus/layout/_partial/pagination.ejs","hash":"247bf8ec39965fe07b52f5a3d04e02e0aaf2da57","modified":1690825392136},{"_id":"themes/cactus/layout/_partial/comments.ejs","hash":"4e75035a427fd137ae7f12940209e8e97845df3b","modified":1690825392135},{"_id":"themes/cactus/layout/_partial/styles.ejs","hash":"c6bc7e8a422c5bb57f88fed1d1b0694d03e24e74","modified":1690825392137},{"_id":"themes/cactus/layout/_partial/umami_analytics.ejs","hash":"3e79be7343c4d0a5971d3aa659e3750672a91e72","modified":1690825392137},{"_id":"themes/cactus/source/css/_extend.styl","hash":"b6a4e5905a7515dda66919167531a5ab2b3d1fe2","modified":1690825392138},{"_id":"themes/cactus/source/css/_fonts.styl","hash":"354809b5a64e8a47a66c66fd1a28ac597c1460a6","modified":1690825392138},{"_id":"themes/cactus/layout/_partial/search.ejs","hash":"8b4bf9cf5db0ce762a31fc3baae0f2fc004bece4","modified":1690825392137},{"_id":"themes/cactus/source/css/rtl.styl","hash":"ff8700e1626feeb53d905a2df2777bda7d1eca50","modified":1690825392144},{"_id":"themes/cactus/source/css/_mixins.styl","hash":"1a9e309523df9685e8d088dcff0a809c58e2c392","modified":1690825392143},{"_id":"themes/cactus/source/js/main.js","hash":"619ac6529d140711e3b14f739a192bb31c4824ff","modified":1690825392146},{"_id":"themes/cactus/source/js/search.js","hash":"914a2ce72fb325106c61600200be823b72bfb39f","modified":1690825392146},{"_id":"themes/cactus/source/css/_variables.styl","hash":"69d9c5e95edcaee5ccd8218262b989ce721cce79","modified":1690825392144},{"_id":"themes/cactus/source/css/_util.styl","hash":"2bfeb2e2605dd5235693b00c71a212646d2e0410","modified":1690825392144},{"_id":"themes/cactus/source/images/favicon.ico","hash":"088d977979b60a32c9f023961e097cb1b4324bee","modified":1691143190749},{"_id":"themes/cactus/source/images/apple-touch-icon.png","hash":"57e2def34682655f41a0be2d083f16765ba7858b","modified":1690825392145},{"_id":"themes/cactus/source/css/style.styl","hash":"4ee0091bfa3cf43fa528d54df378f3d977257342","modified":1690825392145},{"_id":"themes/cactus/layout/_partial/post/date.ejs","hash":"23770328c7d900ecc7fd87930dc24b095eb272ac","modified":1690825392136},{"_id":"themes/cactus/layout/_partial/post/gallery.ejs","hash":"9aecd8908e8a684f33dc20c02497c0f1774137c7","modified":1690825392136},{"_id":"themes/cactus/layout/_partial/post/actions_desktop.ejs","hash":"54a590e39e2d6e9ee41b8a1423a7bc67ab03363d","modified":1690825392136},{"_id":"themes/cactus/layout/_partial/post/actions_mobile.ejs","hash":"5ee47fffaf428802cfe47dd2e6186c6bbff85067","modified":1690825392136},{"_id":"themes/cactus/layout/_partial/post/category.ejs","hash":"aeb99694d8492d4fcda320493b259fb68bf21830","modified":1690825392136},{"_id":"themes/cactus/source/css/_colors/dark.styl","hash":"9aa43b1f23d5d268dfa36bd942d6ce97b7677c4d","modified":1690825392138},{"_id":"themes/cactus/source/images/favicon-192x192.png","hash":"96e6fcbbb13a5914a6131391e210eb7dfd13d692","modified":1690825392145},{"_id":"themes/cactus/source/css/_colors/light.styl","hash":"d14ef1aa02d0895b6f9321ebfc23a1ec84b054b8","modified":1690825392138},{"_id":"themes/cactus/source/css/_highlight/agate.styl","hash":"53027913ed8d4f75ac3e49e76aad824f0df62da3","modified":1690825392138},{"_id":"themes/cactus/source/css/_colors/white.styl","hash":"88e93a9d3fe1d0270d65cabdeacc18bd94d45937","modified":1690825392138},{"_id":"themes/cactus/source/css/_highlight/arduino-light.styl","hash":"15e8572585cd708221c513dea4bdd89d8fe56c10","modified":1690825392138},{"_id":"themes/cactus/source/css/_highlight/androidstudio.styl","hash":"2af0861725f97f0ee2ded67c3d2d4548c62b2d16","modified":1690825392138},{"_id":"themes/cactus/layout/_partial/post/title.ejs","hash":"b2a00781d1301ff4d362b5d2a97480052ee4cae1","modified":1690825392136},{"_id":"themes/cactus/layout/_partial/post/tag.ejs","hash":"80bd2afd49b296e6441ab977a0614add710c32a3","modified":1690825392136},{"_id":"themes/cactus/layout/_partial/scripts.ejs","hash":"9bbc0cf2dd0d7cdaafe827c3945a9bea1503da83","modified":1690825392136},{"_id":"themes/cactus/source/css/_highlight/arta.styl","hash":"b3e81e3e694ceb8deed178adb8b91013c5120e30","modified":1690825392138},{"_id":"themes/cactus/source/css/_highlight/ascetic.styl","hash":"32cff3bef6fac3760fe78f203096477052a90552","modified":1690825392138},{"_id":"themes/cactus/source/css/_highlight/atelier-cave-light.styl","hash":"a5be0744a7ecf4a08f600ade4cfd555afc67bc15","modified":1690825392139},{"_id":"themes/cactus/source/css/_highlight/atelier-estuary-dark.styl","hash":"0bb16a4eff93688f40787abc2f9e56e7d5cc93e7","modified":1690825392139},{"_id":"themes/cactus/layout/_partial/post/share.ejs","hash":"9a15a7c005cfe518fdc9ec61a5107c76012f49d0","modified":1690825392136},{"_id":"themes/cactus/source/css/_highlight/atelier-dune-dark.styl","hash":"c196ff0ee064af0e507823694ae39020addfc280","modified":1690825392139},{"_id":"themes/cactus/source/css/_highlight/atelier-dune-light.styl","hash":"931435fbc6f974e8ce9e32722680035d248a9dc1","modified":1690825392139},{"_id":"themes/cactus/source/css/_highlight/atelier-estuary-light.styl","hash":"344276ca9b27e51d4c907f76afe5d13cf8e60bdf","modified":1690825392139},{"_id":"themes/cactus/source/css/_highlight/atelier-forest-light.styl","hash":"95228d9f2102fad425536aac44b80b2cba1f5950","modified":1690825392139},{"_id":"themes/cactus/source/css/_highlight/atelier-forest-dark.styl","hash":"effbc5d75fa87203c847039869c22031b40d5b7d","modified":1690825392139},{"_id":"themes/cactus/source/css/_highlight/atelier-heath-light.styl","hash":"8c8c2e445abef85273be966d59770e9ced6aac21","modified":1690825392139},{"_id":"themes/cactus/source/css/_highlight/atelier-lakeside-dark.styl","hash":"10ee3882fca7b97a37bd309d2d35fce9868647bb","modified":1690825392139},{"_id":"themes/cactus/source/css/_highlight/atelier-heath-dark.styl","hash":"9a2e9a1d0a01bbdf158560c3ed1c134e098b2c68","modified":1690825392139},{"_id":"themes/cactus/source/css/_highlight/atelier-lakeside-light.styl","hash":"2c54cb9bdb259ae3b5b29f63ac2469ed34b08578","modified":1690825392139},{"_id":"themes/cactus/source/css/_highlight/atelier-plateau-dark.styl","hash":"84c80e6f67f62fce958d25817c277d2360272617","modified":1690825392139},{"_id":"themes/cactus/source/css/_highlight/atelier-savanna-dark.styl","hash":"e32c1c70def8060fce5e790979a126da650ac642","modified":1690825392139},{"_id":"themes/cactus/source/css/_highlight/atelier-plateau-light.styl","hash":"d1a05fdd1ededc9063d181ab25bad55a164aeb4a","modified":1690825392139},{"_id":"themes/cactus/source/css/_highlight/atelier-seaside-dark.styl","hash":"2edf385215bbe1985b1a10106525d362667d28c2","modified":1690825392140},{"_id":"themes/cactus/source/css/_highlight/atelier-seaside-light.styl","hash":"0597342da6e2d0c5bdcc7d42dabb07322b1a4177","modified":1690825392140},{"_id":"themes/cactus/source/css/_highlight/atelier-sulphurpool-dark.styl","hash":"538a14321193cd8abf2ddc484306631e54149ffb","modified":1690825392140},{"_id":"themes/cactus/source/css/_highlight/atelier-savanna-light.styl","hash":"f8244c93711c7cb59dd79d2df966806b30d171ea","modified":1690825392140},{"_id":"themes/cactus/source/css/_highlight/atelier-sulphurpool-light.styl","hash":"efa52713efc468abeeb2b9299704371583b857de","modified":1690825392140},{"_id":"themes/cactus/source/css/_highlight/color-brewer.styl","hash":"2a439d6214430e2f45dd4939b4dfe1fe1a20aa0f","modified":1690825392140},{"_id":"themes/cactus/source/css/_highlight/dark.styl","hash":"f5e6e75958de59e87fc6be3a1668e870e20bc836","modified":1690825392140},{"_id":"themes/cactus/source/css/_highlight/brown-paper.styl","hash":"c2326ba20a5020a66ca7895258d18833327d4334","modified":1690825392140},{"_id":"themes/cactus/source/css/_highlight/atelier-cave-dark.styl","hash":"ce63dd8548688d88254405eedfa75b1d7c82449e","modified":1690825392139},{"_id":"themes/cactus/source/css/_highlight/codepen-embed.styl","hash":"8b7b34484f76a6c2c3b1a9e49abb9b382f439ae8","modified":1690825392140},{"_id":"themes/cactus/source/css/_colors/classic.styl","hash":"bc09f8777a6c99030da953dfdb84f793c5e4fd85","modified":1690825392138},{"_id":"themes/cactus/source/css/_highlight/brown-papersq.png","hash":"3a1332ede3a75a3d24f60b6ed69035b72da5e182","modified":1690825392140},{"_id":"themes/cactus/source/css/_highlight/darkula.styl","hash":"9717efa9194837ba3fb4d762997d33075dcf8bfa","modified":1690825392140},{"_id":"themes/cactus/source/css/_highlight/docco.styl","hash":"b1c176378bb275f2e8caa759f36294e42d614bf1","modified":1690825392140},{"_id":"themes/cactus/source/css/_highlight/foundation.styl","hash":"bf8ddc94b4ad995b8b8805b5a4cf95004553fdac","modified":1690825392140},{"_id":"themes/cactus/source/css/_highlight/github-gist.styl","hash":"48211a03d33e7f7ada0b261162bea06676155a71","modified":1690825392141},{"_id":"themes/cactus/source/css/_highlight/github.styl","hash":"3336aeba324c6d34a6fd41fef9b47bc598f7064c","modified":1690825392141},{"_id":"themes/cactus/source/css/_highlight/googlecode.styl","hash":"bda816beee7b439814b514e6869dc678822be1bc","modified":1690825392141},{"_id":"themes/cactus/source/css/_highlight/far.styl","hash":"aaac3028f5e33123cd123a583cddc9290c45ec8e","modified":1690825392140},{"_id":"themes/cactus/source/css/_highlight/grayscale.styl","hash":"bf37d8b8d1e602126c51526f0cc28807440228ed","modified":1690825392141},{"_id":"themes/cactus/source/css/_highlight/gruvbox-dark.styl","hash":"76b744c14fd5600bea64731c05df97c2df75523f","modified":1690825392141},{"_id":"themes/cactus/source/css/_highlight/hopscotch.styl","hash":"1378a6bc67a32c0cbff72ab771268b53f9aa586d","modified":1690825392141},{"_id":"themes/cactus/source/css/_highlight/hybrid.styl","hash":"b8eb5c69d12f2ee5ebc50265ae271699d7f1a8d3","modified":1690825392141},{"_id":"themes/cactus/source/css/_highlight/index.styl","hash":"002d5596f6379cc87dbd43d9145bc764aa666be1","modified":1690825392141},{"_id":"themes/cactus/source/css/_highlight/ir-black.styl","hash":"53e5d74326a4527b92272bbd6946d4fec92720e8","modified":1690825392141},{"_id":"themes/cactus/source/css/_highlight/highlightjs.styl","hash":"0e198b7a59191c7a39b641a4ddd22c948edb9358","modified":1690825392141},{"_id":"themes/cactus/source/css/_highlight/kimbie.styl","hash":"51b889ca7c6fe178cfbbe28d875a6ea427184441","modified":1690825392141},{"_id":"themes/cactus/source/css/_highlight/kimbie.light.styl","hash":"61f8baed25be05288c8604d5070afbcd9f183f49","modified":1690825392141},{"_id":"themes/cactus/source/css/_highlight/idea.styl","hash":"a02967cb51c16a34e0ee895d33ded2b823d35b21","modified":1690825392141},{"_id":"themes/cactus/source/css/_highlight/magula.styl","hash":"16d323f989b1420a0f72ef989242ece9bf17a456","modified":1690825392142},{"_id":"themes/cactus/source/css/_highlight/monokai-sublime.styl","hash":"c385b11345894be7e6ce3c5f08663e199933b8e4","modified":1690825392142},{"_id":"themes/cactus/source/css/_highlight/kimbie.dark.styl","hash":"45dbb168f22d739d0109745d2decd66b5f94e786","modified":1690825392141},{"_id":"themes/cactus/source/css/_highlight/paraiso-dark.styl","hash":"f1537bd868579fa018ecdbfd2eb922dcf3ba2cac","modified":1690825392142},{"_id":"themes/cactus/source/css/_highlight/obsidian.styl","hash":"199e28326be8590883f0813ebbd54fcfaa4750fd","modified":1690825392142},{"_id":"themes/cactus/source/css/_highlight/pojoaque.jpg","hash":"c5fe6533b88b21f8d90d3d03954c6b29baa67791","modified":1690825392142},{"_id":"themes/cactus/source/css/_highlight/paraiso.styl","hash":"75f181eece6b71d033ea0c8d6cf00ae7efb9e29b","modified":1690825392142},{"_id":"themes/cactus/source/css/_highlight/railscasts.styl","hash":"b6674db9210e0c4444e4835fff2d1361f3ebd64c","modified":1690825392142},{"_id":"themes/cactus/source/css/_highlight/school-book.png","hash":"711ec983c874e093bb89eb77afcbdf6741fa61ee","modified":1690825392142},{"_id":"themes/cactus/source/css/_highlight/pojoaque.styl","hash":"4e7b6b046b8575ac749f6aec4e953a62ada27a36","modified":1690825392142},{"_id":"themes/cactus/source/css/_highlight/rainbow.styl","hash":"c0cf97aae3e10fdcd10414547a711c9effbc39b8","modified":1690825392142},{"_id":"themes/cactus/source/css/_highlight/solarized-dark.styl","hash":"90c9da5aa594383697e5b18892a7f95beb053f55","modified":1690825392142},{"_id":"themes/cactus/source/css/_highlight/school-book.styl","hash":"d43560fe519a931ce6da7d57416d7aa148441b83","modified":1690825392142},{"_id":"themes/cactus/source/css/_highlight/solarized-light.styl","hash":"aa0dd3fd25c464183b59c5575c9bee8756b397f2","modified":1690825392142},{"_id":"themes/cactus/source/css/_highlight/sunburst.styl","hash":"af3eec0fd56151e55bbd49c31b151f36717611d8","modified":1690825392143},{"_id":"themes/cactus/source/css/_highlight/tomorrow-night-blue.styl","hash":"f24c17d0ab815dcfaab3438cb9fe2ab4839f5e0d","modified":1690825392143},{"_id":"themes/cactus/source/css/_highlight/tomorrow-night-bright.styl","hash":"7674fecb6d27350727dc0d2dc93bc018382ebbd0","modified":1690825392143},{"_id":"themes/cactus/source/css/_highlight/tomorrow-night-eighties.styl","hash":"28d751075ebabf7d0327a36f725076fe82fdf626","modified":1690825392143},{"_id":"themes/cactus/source/css/_highlight/tomorrow-night.styl","hash":"16ba09b2db501e4e3e2e7d62595d9bf935bf27c4","modified":1690825392143},{"_id":"themes/cactus/source/css/_highlight/mono-blue.styl","hash":"4c89a6ae29de67c0700585af82a60607e85df928","modified":1690825392142},{"_id":"themes/cactus/source/css/_highlight/tomorrow.styl","hash":"15779cf6846725c7c35fc56cac39047d7e0aec1c","modified":1690825392143},{"_id":"themes/cactus/source/css/_highlight/vs.styl","hash":"959a746f4b37aacb5d1d6ff1d57e0c045289d75d","modified":1690825392143},{"_id":"themes/cactus/source/css/_highlight/xcode.styl","hash":"5e8532ae8366dcf6a4ef5e4813dc3d42ab3d0a50","modified":1690825392143},{"_id":"themes/cactus/source/css/_partial/archive.styl","hash":"31aef892437d5734a134c34f2a8a6610a8f671c3","modified":1690825392143},{"_id":"themes/cactus/source/css/_partial/comments.styl","hash":"1e90f1fb9d4c155df518cacb5a537e9de9c042c1","modified":1690825392143},{"_id":"themes/cactus/source/css/_partial/categories.styl","hash":"a43f00e61b3507f130b8a3f8108a4eeca147c2a0","modified":1690825392143},{"_id":"themes/cactus/source/css/_partial/footer.styl","hash":"61c2c7c5f73a0022ec41830bea0812a97f522d7c","modified":1690825392144},{"_id":"themes/cactus/source/css/_highlight/zenburn.styl","hash":"68ff9332ccc03f9389b15b713415cde016f8088f","modified":1690825392143},{"_id":"themes/cactus/source/css/_partial/header.styl","hash":"8ce12f14382b6d471e3fe1266573b34fa84deaa0","modified":1690825392144},{"_id":"themes/cactus/source/css/_partial/index.styl","hash":"59c99f4ea3a73bf47ce030df166c5e33d5de31fb","modified":1690825392144},{"_id":"themes/cactus/source/css/_partial/pagination.styl","hash":"950bf517bbe7adb9a9aa4eb5ddec74ffc7598787","modified":1690825392144},{"_id":"themes/cactus/source/css/_partial/search.styl","hash":"159be002780c62a77f46947cf854a7342fba24f4","modified":1690825392144},{"_id":"themes/cactus/source/css/_partial/article.styl","hash":"258370d8ab98e63804ead9bc030f633ca97a1235","modified":1690825392143},{"_id":"themes/cactus/source/css/_partial/tags.styl","hash":"d571d5c7c960300d29c5f0ec3fe1140322ecd6b3","modified":1690825392144},{"_id":"themes/cactus/source/css/_partial/tooltip.styl","hash":"2daff581ec3efaec840cbfdee512195919c32629","modified":1690825392144},{"_id":"themes/cactus/source/lib/clipboard/clipboard.min.js","hash":"9a7cb405f9beed005891587d41f76a0720893ffc","modified":1690825392146},{"_id":"themes/cactus/source/css/_highlight/monokai.styl","hash":"f87be027848ea6bee623a08ad1e17b2f5b7937ee","modified":1690825392142},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Black.woff","hash":"f6fda2de0348b3e3b7de73267f9f8e97a62f8353","modified":1690825392167},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Bold.woff","hash":"56e632c9196fac364c66f812a3b4635dd999ad1c","modified":1690825392169},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Bold.woff2","hash":"6e40d0c7669c1adbcbf034bdc459f7bed4d6676d","modified":1690825392169},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Black.woff2","hash":"7ea4fd7dd4cd4f480af78a0e2c5849eb921b1aeb","modified":1690825392167},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Light.woff2","hash":"50b654d916204c30987d1987abd890ef92085ae3","modified":1690825392171},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Medium.woff","hash":"43a8aaa3fca8721dd32a5d20f7a98dfbc87c97fd","modified":1690825392172},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Medium.woff2","hash":"14b3e257c51a6a11d23b2a078017ff340c9777e4","modified":1690825392173},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Regular.woff","hash":"235889d59ddad2b1f3243ccaab7733bd713a2a21","modified":1690825392173},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Regular.woff2","hash":"a9714ffb842afc74836e64de04b52d8c37c87c8a","modified":1690825392173},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Thin.woff","hash":"c0e784de2eb5261cca244928f8a81fd893c3fe16","modified":1690825392174},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Thin.woff2","hash":"9b03b1a9071709f5b7dbca13412ecef6cb7a2a67","modified":1690825392174},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Variable.woff","hash":"2e8e6d38d361def5f48baac366f04e3db3ed4828","modified":1690825392175},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Variable.woff2","hash":"e213bb26bc7f10e1df3fe2d03d3ecaecd6e6d371","modified":1690825392176},{"_id":"themes/cactus/source/lib/justified-gallery/css/justifiedGallery.min.css","hash":"dd3052149d3054f35efb823c68dd78e78aad5875","modified":1690825392151},{"_id":"themes/cactus/source/css/_partial/post/actions_mobile.styl","hash":"0d2966c1d870392476864af8ee3ba312ba30cb82","modified":1690825392144},{"_id":"themes/cactus/source/lib/vazir-font/font-face.css","hash":"ba0030e1cd28a8caa7a5bb74b98da7c7bb185c90","modified":1690825392176},{"_id":"themes/cactus/source/lib/justified-gallery/js/jquery.justifiedGallery.min.js","hash":"ad8f48b4022498078b089fcdd1e8b47faf496931","modified":1690825392151},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Light.woff","hash":"1c3dbf17411b1f6a6b22c2b76e9d8511586643d0","modified":1690825392170},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-regular-400.ttf","hash":"67afa6237670ab99125056f2899129f22912dcf3","modified":1690825392148},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-regular-400.woff2","hash":"fb363d27cfdfe71a243fa2ac3dab2815232b9b7e","modified":1690825392148},{"_id":"themes/cactus/source/css/_highlight/paraiso-light.styl","hash":"d224d1df0eb3395d9eea1344cee945c228af2911","modified":1690825392142},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-v4compatibility.ttf","hash":"a9d072aca9e0fadc2a7167671ce3d6b18d9cd2cc","modified":1690825392150},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-v4compatibility.woff2","hash":"8f80d0bbe995f7fe92320fdaec10cd5ccd710a51","modified":1690825392150},{"_id":"themes/cactus/source/css/_partial/post/actions_desktop.styl","hash":"a1f36f9a3fd5ffcd832bf39e9402678978035d48","modified":1690825392144},{"_id":"themes/cactus/source/lib/jquery/jquery.min.js","hash":"eda46747c71d38a880bee44f9a439c3858bb8f99","modified":1690825392151},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Bold.ttf","hash":"122bb778b17a152c426a825ee981610a4bd59bf3","modified":1690825392169},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Bold.eot","hash":"5c1c680fade45393e4a5bb4548a092cd5ea6811e","modified":1690825392168},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Black.ttf","hash":"b65915e3fa57b5c19995d15dc2341d115c1971b9","modified":1690825392167},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Black.eot","hash":"91152bd73e7ff8d943e3bde3ddb0fa0a018e1c21","modified":1690825392166},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Light.ttf","hash":"df82b80c4d3b11e70dcd269fc62ac97cbfa0414d","modified":1690825392170},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Medium.eot","hash":"d9ec1f9f3fefd57e446cbe86dc297f1ff269b6de","modified":1690825392171},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Regular.eot","hash":"521c01f0eb79a48025e972ecbe21b0d7fb15437b","modified":1690825392173},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Medium.ttf","hash":"948a091f0fdb8c7ae17d5ef8e51bd8830d65dd9a","modified":1690825392172},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Regular.ttf","hash":"643c28c8f8a2bce1a0d62525aa045cd9883773cd","modified":1690825392173},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Thin.ttf","hash":"6aacb0eecb03c660570b6e159ba5ca97ca7461cf","modified":1690825392174},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Light.eot","hash":"a059359e9bea17dc2ff2ede955a05bf0dc4d00d0","modified":1690825392170},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Thin.eot","hash":"a0ea0bdaef00b35544f9a21d25d35db9a79f7189","modified":1690825392173},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Variable.eot","hash":"af46f7f4e10a1440a4c97b350622d279143e6798","modified":1690825392175},{"_id":"themes/cactus/source/lib/font-awesome/css/all.min.css","hash":"8c06d82739d14b094ff6d9036021a252bd1d985d","modified":1690825392147},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Variable.ttf","hash":"1e08b6373c2e086f24776df9b11e4be6bbcc8a4a","modified":1690825392175},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-brands-400.woff2","hash":"4350f9ba93384634faf35f41c503c99c767f1069","modified":1690825392148},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-brands-400.ttf","hash":"f0982a77285d53653845b0a78170b4688db972f1","modified":1690825392148},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-solid-900.woff2","hash":"6b99aa650bd12a36caa14e0127435d8f4cd3ba73","modified":1690825392150},{"_id":"themes/cactus/source/images/logo.png","hash":"0e3029251dfda26adee2761f71377297e8c26871","modified":1690825392146},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-solid-900.ttf","hash":"20bd663830188cbadd2264e1daf9497c3ffc3621","modified":1690825392150},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGL-Italic.ttf","hash":"96c97a0a098ca40802f948ae56fa37aa6683d034","modified":1690825392157},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGS-Italic.ttf","hash":"7f7cdbdcc26279c04046632e22d872f111bc9399","modified":1690825392166},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGM-Italic.ttf","hash":"68700db02debd4b922304134da83b829cbfddfc9","modified":1690825392164},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGL-BoldItalic.ttf","hash":"a9a431fc7a6c3a67c98021d4035c12a07a4f1070","modified":1690825392156},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGL-Bold.ttf","hash":"bfa1ed9a263ed78462f06d322de13bd5bd0906b2","modified":1690825392154},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGL-Regular.ttf","hash":"2b912dd13f052f645ee19951604610bb350d50af","modified":1690825392160},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGM-Regular.ttf","hash":"5e220152adefe905b2197f873d7cee99eca50e91","modified":1690825392165},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGM-Bold.ttf","hash":"a8a8df3393bccc365335fc5eb0a62a6b7ccd32b9","modified":1690825392160},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGS-Bold.ttf","hash":"df202ce09cbdc70bc16b81983a13ef0f94e46f10","modified":1690825392165},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGM-BoldItalic.ttf","hash":"65ddb11e75ee93909e845ab912a36717c48f1c94","modified":1690825392162},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGS-BoldItalic.ttf","hash":"d895a1bd25e36c58b7f463ebe14de09f186d5ab4","modified":1690825392165},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGS-Regular.ttf","hash":"56fa0e33a390b704afc56af93a31576ccdbbdd9e","modified":1690825392166},{"_id":"public/404.html","hash":"c58ad6d05d1aad3a0e1e15df5f6e3d5cd9de1435","modified":1691143204025},{"_id":"public/images/apple-touch-icon.png","hash":"57e2def34682655f41a0be2d083f16765ba7858b","modified":1690825395152},{"_id":"public/images/favicon-192x192.png","hash":"96e6fcbbb13a5914a6131391e210eb7dfd13d692","modified":1690825395152},{"_id":"public/images/favicon.ico","hash":"088d977979b60a32c9f023961e097cb1b4324bee","modified":1691143204025},{"_id":"public/lib/vazir-font/Vazir-Black.woff","hash":"f6fda2de0348b3e3b7de73267f9f8e97a62f8353","modified":1690825395152},{"_id":"public/lib/vazir-font/Vazir-Black.woff2","hash":"7ea4fd7dd4cd4f480af78a0e2c5849eb921b1aeb","modified":1690825395152},{"_id":"public/lib/vazir-font/Vazir-Bold.woff","hash":"56e632c9196fac364c66f812a3b4635dd999ad1c","modified":1690825395152},{"_id":"public/lib/vazir-font/Vazir-Bold.woff2","hash":"6e40d0c7669c1adbcbf034bdc459f7bed4d6676d","modified":1690825395152},{"_id":"public/lib/vazir-font/Vazir-Light.woff2","hash":"50b654d916204c30987d1987abd890ef92085ae3","modified":1690825395152},{"_id":"public/lib/vazir-font/Vazir-Medium.woff","hash":"43a8aaa3fca8721dd32a5d20f7a98dfbc87c97fd","modified":1690825395152},{"_id":"public/lib/vazir-font/Vazir-Medium.woff2","hash":"14b3e257c51a6a11d23b2a078017ff340c9777e4","modified":1690825395152},{"_id":"public/lib/vazir-font/Vazir-Regular.woff2","hash":"a9714ffb842afc74836e64de04b52d8c37c87c8a","modified":1690825395152},{"_id":"public/lib/vazir-font/Vazir-Light.woff","hash":"1c3dbf17411b1f6a6b22c2b76e9d8511586643d0","modified":1690825395152},{"_id":"public/lib/vazir-font/Vazir-Thin.woff","hash":"c0e784de2eb5261cca244928f8a81fd893c3fe16","modified":1690825395152},{"_id":"public/lib/vazir-font/Vazir-Thin.woff2","hash":"9b03b1a9071709f5b7dbca13412ecef6cb7a2a67","modified":1690825395152},{"_id":"public/lib/vazir-font/Vazir-Regular.woff","hash":"235889d59ddad2b1f3243ccaab7733bd713a2a21","modified":1690825395152},{"_id":"public/lib/vazir-font/Vazir-Variable.woff2","hash":"e213bb26bc7f10e1df3fe2d03d3ecaecd6e6d371","modified":1690825395152},{"_id":"public/lib/font-awesome/webfonts/fa-regular-400.ttf","hash":"67afa6237670ab99125056f2899129f22912dcf3","modified":1690825395152},{"_id":"public/lib/font-awesome/webfonts/fa-v4compatibility.ttf","hash":"a9d072aca9e0fadc2a7167671ce3d6b18d9cd2cc","modified":1690825395152},{"_id":"public/lib/font-awesome/webfonts/fa-regular-400.woff2","hash":"fb363d27cfdfe71a243fa2ac3dab2815232b9b7e","modified":1690825395152},{"_id":"public/lib/vazir-font/Vazir-Variable.woff","hash":"2e8e6d38d361def5f48baac366f04e3db3ed4828","modified":1690825395152},{"_id":"public/lib/font-awesome/webfonts/fa-v4compatibility.woff2","hash":"8f80d0bbe995f7fe92320fdaec10cd5ccd710a51","modified":1690825395152},{"_id":"public/lib/vazir-font/Vazir-Bold.eot","hash":"5c1c680fade45393e4a5bb4548a092cd5ea6811e","modified":1690825395152},{"_id":"public/lib/vazir-font/Vazir-Bold.ttf","hash":"122bb778b17a152c426a825ee981610a4bd59bf3","modified":1690825395152},{"_id":"public/lib/vazir-font/Vazir-Black.ttf","hash":"b65915e3fa57b5c19995d15dc2341d115c1971b9","modified":1690825395152},{"_id":"public/lib/vazir-font/Vazir-Light.ttf","hash":"df82b80c4d3b11e70dcd269fc62ac97cbfa0414d","modified":1690825395152},{"_id":"public/lib/vazir-font/Vazir-Light.eot","hash":"a059359e9bea17dc2ff2ede955a05bf0dc4d00d0","modified":1690825395152},{"_id":"public/js/main.js","hash":"619ac6529d140711e3b14f739a192bb31c4824ff","modified":1690825395152},{"_id":"public/css/rtl.css","hash":"9589fac02a34fd9084f805f801889028756bbb65","modified":1690825395152},{"_id":"public/js/search.js","hash":"914a2ce72fb325106c61600200be823b72bfb39f","modified":1690825395152},{"_id":"public/lib/vazir-font/font-face.css","hash":"ba0030e1cd28a8caa7a5bb74b98da7c7bb185c90","modified":1690825395152},{"_id":"public/lib/clipboard/clipboard.min.js","hash":"9a7cb405f9beed005891587d41f76a0720893ffc","modified":1690825395152},{"_id":"public/lib/justified-gallery/css/justifiedGallery.min.css","hash":"dd3052149d3054f35efb823c68dd78e78aad5875","modified":1690825395152},{"_id":"public/css/style.css","hash":"775c8fa6860f020f1bd5ebdc2d8346998602138a","modified":1690825395152},{"_id":"public/lib/jquery/jquery.min.js","hash":"eda46747c71d38a880bee44f9a439c3858bb8f99","modified":1690825395152},{"_id":"public/lib/justified-gallery/js/jquery.justifiedGallery.min.js","hash":"ad8f48b4022498078b089fcdd1e8b47faf496931","modified":1690825395152},{"_id":"public/lib/font-awesome/css/all.min.css","hash":"8c06d82739d14b094ff6d9036021a252bd1d985d","modified":1690825395152},{"_id":"public/lib/vazir-font/Vazir-Medium.eot","hash":"d9ec1f9f3fefd57e446cbe86dc297f1ff269b6de","modified":1690825395152},{"_id":"public/lib/vazir-font/Vazir-Regular.ttf","hash":"643c28c8f8a2bce1a0d62525aa045cd9883773cd","modified":1690825395152},{"_id":"public/lib/vazir-font/Vazir-Regular.eot","hash":"521c01f0eb79a48025e972ecbe21b0d7fb15437b","modified":1690825395152},{"_id":"public/lib/vazir-font/Vazir-Thin.ttf","hash":"6aacb0eecb03c660570b6e159ba5ca97ca7461cf","modified":1690825395152},{"_id":"public/lib/vazir-font/Vazir-Medium.ttf","hash":"948a091f0fdb8c7ae17d5ef8e51bd8830d65dd9a","modified":1690825395152},{"_id":"public/lib/vazir-font/Vazir-Variable.eot","hash":"af46f7f4e10a1440a4c97b350622d279143e6798","modified":1690825395152},{"_id":"public/lib/vazir-font/Vazir-Variable.ttf","hash":"1e08b6373c2e086f24776df9b11e4be6bbcc8a4a","modified":1690825395152},{"_id":"public/lib/font-awesome/webfonts/fa-brands-400.woff2","hash":"4350f9ba93384634faf35f41c503c99c767f1069","modified":1690825395152},{"_id":"public/lib/vazir-font/Vazir-Thin.eot","hash":"a0ea0bdaef00b35544f9a21d25d35db9a79f7189","modified":1690825395152},{"_id":"public/lib/vazir-font/Vazir-Black.eot","hash":"91152bd73e7ff8d943e3bde3ddb0fa0a018e1c21","modified":1690825395152},{"_id":"public/lib/font-awesome/webfonts/fa-solid-900.woff2","hash":"6b99aa650bd12a36caa14e0127435d8f4cd3ba73","modified":1690825395152},{"_id":"public/lib/font-awesome/webfonts/fa-brands-400.ttf","hash":"f0982a77285d53653845b0a78170b4688db972f1","modified":1690825395152},{"_id":"public/images/logo.png","hash":"0e3029251dfda26adee2761f71377297e8c26871","modified":1691141095556},{"_id":"public/lib/font-awesome/webfonts/fa-solid-900.ttf","hash":"20bd663830188cbadd2264e1daf9497c3ffc3621","modified":1690825395152},{"_id":"public/lib/meslo-LG/MesloLGL-Italic.ttf","hash":"96c97a0a098ca40802f948ae56fa37aa6683d034","modified":1690825395152},{"_id":"public/lib/meslo-LG/MesloLGS-Italic.ttf","hash":"7f7cdbdcc26279c04046632e22d872f111bc9399","modified":1690825395152},{"_id":"public/lib/meslo-LG/MesloLGM-Italic.ttf","hash":"68700db02debd4b922304134da83b829cbfddfc9","modified":1690825395152},{"_id":"public/lib/meslo-LG/MesloLGL-BoldItalic.ttf","hash":"a9a431fc7a6c3a67c98021d4035c12a07a4f1070","modified":1690825395152},{"_id":"public/lib/meslo-LG/MesloLGM-BoldItalic.ttf","hash":"65ddb11e75ee93909e845ab912a36717c48f1c94","modified":1690825395152},{"_id":"public/lib/meslo-LG/MesloLGM-Bold.ttf","hash":"a8a8df3393bccc365335fc5eb0a62a6b7ccd32b9","modified":1690825395152},{"_id":"public/lib/meslo-LG/MesloLGL-Regular.ttf","hash":"2b912dd13f052f645ee19951604610bb350d50af","modified":1690825395152},{"_id":"public/lib/meslo-LG/MesloLGL-Bold.ttf","hash":"bfa1ed9a263ed78462f06d322de13bd5bd0906b2","modified":1690825395152},{"_id":"public/lib/meslo-LG/MesloLGM-Regular.ttf","hash":"5e220152adefe905b2197f873d7cee99eca50e91","modified":1690825395152},{"_id":"public/lib/meslo-LG/MesloLGS-Bold.ttf","hash":"df202ce09cbdc70bc16b81983a13ef0f94e46f10","modified":1690825395152},{"_id":"public/lib/meslo-LG/MesloLGS-BoldItalic.ttf","hash":"d895a1bd25e36c58b7f463ebe14de09f186d5ab4","modified":1690825395152},{"_id":"public/lib/meslo-LG/MesloLGS-Regular.ttf","hash":"56fa0e33a390b704afc56af93a31576ccdbbdd9e","modified":1690825395152},{"_id":"themes/cactus/source/images/semih.png","hash":"c5ad163826e3079c30a8316ac1ea47df5ab6a95b","modified":1691140675787},{"_id":"public/images/semih.png","hash":"c5ad163826e3079c30a8316ac1ea47df5ab6a95b","modified":1691140908287},{"_id":"source/_posts/testing-async-code-using-vitest.md","hash":"cba52441f032a1ab26d9ed6aa30f2182fadcf316","modified":1691141617219},{"_id":"public/archives/2023/01/index.html","hash":"4820f4db128fcb9b859df8746e1f3b2a6834b8d2","modified":1691143204025},{"_id":"public/tags/test/index.html","hash":"49e520ac93ae545d6bbcf7e95921b499f1e309be","modified":1691143204025},{"_id":"public/tags/software/index.html","hash":"951745c79792f892be1035ce17b9b8a167d823f9","modified":1691143204025},{"_id":"public/tags/javascript/index.html","hash":"47e8ec90c843511f7f35dae8daeac7c5bc0419b6","modified":1691143204025},{"_id":"public/tags/vitest/index.html","hash":"4cbe211ed9cf5514201fe12c174e173bc5845721","modified":1691143204025},{"_id":"public/2023/01/19/testing-async-code-using-vitest/index.html","hash":"d8ed26e4005e8256a38fe86def0409075f805cc2","modified":1691143204025},{"_id":"source/_posts/AWS-Cloud-Practitioner-Chronicles-Identity-Access-Management-IAM.md","hash":"5bc08542284ef003e5516427920340ff74b948e4","modified":1691141747639},{"_id":"source/_posts/Essentials-of-Transactions-in-PostgreSQL.md","hash":"74930474241c0e52a398bc2e3207f6b3f05bfff5","modified":1691141680170},{"_id":"source/_posts/AWS-Cloud-Practitioner-Chronicles-The-Infrastructure.md","hash":"3b82e149f8f083170830a19c1a5a7c595883a4ff","modified":1691141722433},{"_id":"public/archives/2023/04/index.html","hash":"afaeffdac8abc658678a8a9b573876b91c7a137b","modified":1691143204025},{"_id":"public/archives/2023/05/index.html","hash":"c4ff768d8e21b6070e31d6805cc8fe69fead4ff6","modified":1691143204025},{"_id":"public/tags/aws/index.html","hash":"e54bb3cae39b88012d3059bfcb96d16d8e17bca1","modified":1691143204025},{"_id":"public/tags/cloud-computing/index.html","hash":"52529adf3512c8fca1cdb234695cb80c99bdb4b2","modified":1691143204025},{"_id":"public/tags/aws-cloud-practitioner/index.html","hash":"4aa36f7077a7bee3bd64938ad4e81ba4d68e3308","modified":1691143204025},{"_id":"public/tags/transaction/index.html","hash":"be2353fb11de5059910f30634868a38cbf4e3d16","modified":1691143204025},{"_id":"public/tags/postgresql/index.html","hash":"8ea689ec013733ba274cdaaea81f930a3c068228","modified":1691143204025},{"_id":"public/tags/database/index.html","hash":"93ea5d748fccb016c97fbe2d8cfd710889f30508","modified":1691143204025},{"_id":"public/2023/05/07/AWS-Cloud-Practitioner-Chronicles-Identity-Access-Management-IAM/index.html","hash":"1ecca7e015ab6001ed467885f96e19e78b7d8e92","modified":1691143873656},{"_id":"public/2023/04/22/Essentials-of-Transactions-in-PostgreSQL/index.html","hash":"720ea286509d737511d90c748b9cba38a346ea50","modified":1691144283864},{"_id":"public/2023/04/28/AWS-Cloud-Practitioner-Chronicles-The-Infrastructure/index.html","hash":"69e6e7f3b48005be323a8300c85b0f3756fcfd20","modified":1691143204025},{"_id":"source/_posts/Creating-an-Email-Dispatching-Service-by-Using-RabbitMQ.md","hash":"c32187bb1352ae027ab9269884441d8b6859246f","modified":1691142429304},{"_id":"public/2023/08/04/Creating-an-Email-Dispatching-Service-by-Using-RabbitMQ/index.html","hash":"8b71b768cbbf674db1a810009128e98deeefb7e7","modified":1691143204025},{"_id":"public/archives/2023/08/index.html","hash":"2d24336f4170f7b78469da6090ea79ecf149a93c","modified":1691144283864},{"_id":"source/reading-list/index.md","hash":"5c103a7331c13e03625c436eca44635885cd9d3c","modified":1691143070138},{"_id":"public/reading-list/index.html","hash":"42f78c583dabdf592d0e43234bc17b6fa5e68ff1","modified":1691143072804},{"_id":"themes/cactus/source/images/s.png","hash":"1e62115855f909e198cd9c2a03f0e3d7ffdeb793","modified":1691142949935},{"_id":"public/images/s.png","hash":"1e62115855f909e198cd9c2a03f0e3d7ffdeb793","modified":1691142968764},{"_id":"source/_posts/Cactus-Theme.md","hash":"02f548e2d016566d865737931208ceeff7b3e4a7","modified":1691144072561},{"_id":"public/2023/08/04/Cactus-Theme/index.html","hash":"a9c42e5dad8eccd9870cc9c579d6242b6c83ec0b","modified":1691144283864},{"_id":"source/search/index.md","hash":"4253917f7b23261d9caf5e1357126aa2d429bffa","modified":1691144517941},{"_id":"public/search/index.html","hash":"e04572ec2d0b5bea38923e7a65b6625104bfbc5d","modified":1691144560034}],"Category":[],"Data":[],"Page":[{"title":"Search","type":"search","_content":"","source":"search/index.md","raw":"title: Search\ntype: search\n---\n","date":"2023-08-04T10:23:19.874Z","updated":"2023-08-04T10:23:19.874Z","path":"search/index.html","_id":"clkwfqam90000y3iq48y0dc5z","comments":1,"layout":"page","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"Testing Async Code Using Vitest","date":"2023-01-19T16:25:00.000Z","_content":"\nIn this blog post, I'll be explaining how we can implement unit tests for async JavaScript code using [Vitest](https://github.com/vitest-dev/vitest). In the example code, we will generate JSON Web Token to understand the logic behind the async testing easier. Note that since there are no major differences between Jest and Vitest, you can also use Jest to perform the same action.\n\n\n## Functions To Generate JWT\n\n```javascript\nimport jwt from 'jsonwebtoken';\n\nexport function generateToken(userEmail, doneFn) {\n    jwt.sign({ email: userEmail }, 'secret123', doneFn);\n}\n\nexport function generateTokenPromise(userEmail) {\n    const promise = new Promise((resolve, reject) => {\n        jwt.sign({ email: userEmail }, 'secret123', (error, token) => {\n            if (error) {\n                reject(error);\n            } else {\n                resolve(token);\n            }\n        });\n    });\n\n    return promise;\n};\n```\n\n\n## Wrong Approach\n\nWe expect JWT to be defined and the first test actually passes but does it really work? \n\nAs a matter of fact, no. Because it is not waiting for the `generateToken` function to complete before the test finishes. The `generateToken` function is async, therefore the test finishes before the generateToken function has had a chance to complete and call the callback function, which means that the `expect(token).toBeDefined()` assertion is never reached.\n\nIn the second test, we're trying to generate a JWT and this time expecting it to be 2. The test once again passes, doesn't give any error although it is pretty much impossible jsonwebtoken to generate a token which is 2.\n\n```javascript\nimport { it, expect } from \"vitest\";\nimport { generateToken } from \"./async-example\";\n\n\nit(\"test 1\", () => {\n    const userEmail = \"random@random.com\";\n\n    generateToken(userEmail, (err, token) => {\n        expect(token).toBeDefined();\n    })\n});\n\n\nit(\"test 2\", () => {\n    const userEmail = \"random@random.com\";\n\n    generateToken(userEmail, (err, token) => {\n        expect(token).toBe(2);\n    })\n});\n```\n\n## How To Fix It?\n\nIn order to fix these problems, this time instead of putting the test in a function with an empty argument, we're gonna use a single argument called `done`. So in that way Vitest will wait for the `done` function to be called before considering the test complete and will execute the assertion inside the callback, giving it the chance to run.\n\n```javascript\nit(\"test 1\", (done) => {\n    const userEmail = \"random@random.com\";\n\n    generateToken(userEmail, (err, token) => {\n        expect(token).toBeDefined();\n        done();\n    })\n});\n\n//This time this doesn't pass as we expected.\n//And doesn't timeout thanks to the try-catch block. \nit(\"test 2\", (done) => {\n    const userEmail = \"random@random.com\";\n\n    generateToken(userEmail, (err, token) => {\n        try {\n            expect(token).toBe(2);\n            done();\n        }\n        catch (err) {\n            done(err);\n        }\n    })\n})\n```\n\n# Promises and Async/Await\n\nAlternatively, we can also use `async` and `await` or  adding `resolves` after `expect(token)` to wait for the promise to resolve and then perform the assertion without putting `done` as an argument.\n\n```javascript\nit(\"test 1 async/await\", async () => {\n    const userEmail = \"random@random.com\";\n    const token = await generateTokenPromise(userEmail);\n    expect(token).toBeDefined();\n});\n\nit(\"test 1 .resolves()\", async () => {\n    const userEmail = \"random@random.com\";\n    return expect(generateTokenPromise(userEmail)).resolves.toBeDefined();\n})\n```\n\n\n\nSources:\n* vitest.dev\n* Academind\n\n","source":"_posts/testing-async-code-using-vitest.md","raw":"---\ntitle: Testing Async Code Using Vitest\ndate: 2023-01-20 00:25:00 +0800\ntags: [test, software, javascript, vitest]\n---\n\nIn this blog post, I'll be explaining how we can implement unit tests for async JavaScript code using [Vitest](https://github.com/vitest-dev/vitest). In the example code, we will generate JSON Web Token to understand the logic behind the async testing easier. Note that since there are no major differences between Jest and Vitest, you can also use Jest to perform the same action.\n\n\n## Functions To Generate JWT\n\n```javascript\nimport jwt from 'jsonwebtoken';\n\nexport function generateToken(userEmail, doneFn) {\n    jwt.sign({ email: userEmail }, 'secret123', doneFn);\n}\n\nexport function generateTokenPromise(userEmail) {\n    const promise = new Promise((resolve, reject) => {\n        jwt.sign({ email: userEmail }, 'secret123', (error, token) => {\n            if (error) {\n                reject(error);\n            } else {\n                resolve(token);\n            }\n        });\n    });\n\n    return promise;\n};\n```\n\n\n## Wrong Approach\n\nWe expect JWT to be defined and the first test actually passes but does it really work? \n\nAs a matter of fact, no. Because it is not waiting for the `generateToken` function to complete before the test finishes. The `generateToken` function is async, therefore the test finishes before the generateToken function has had a chance to complete and call the callback function, which means that the `expect(token).toBeDefined()` assertion is never reached.\n\nIn the second test, we're trying to generate a JWT and this time expecting it to be 2. The test once again passes, doesn't give any error although it is pretty much impossible jsonwebtoken to generate a token which is 2.\n\n```javascript\nimport { it, expect } from \"vitest\";\nimport { generateToken } from \"./async-example\";\n\n\nit(\"test 1\", () => {\n    const userEmail = \"random@random.com\";\n\n    generateToken(userEmail, (err, token) => {\n        expect(token).toBeDefined();\n    })\n});\n\n\nit(\"test 2\", () => {\n    const userEmail = \"random@random.com\";\n\n    generateToken(userEmail, (err, token) => {\n        expect(token).toBe(2);\n    })\n});\n```\n\n## How To Fix It?\n\nIn order to fix these problems, this time instead of putting the test in a function with an empty argument, we're gonna use a single argument called `done`. So in that way Vitest will wait for the `done` function to be called before considering the test complete and will execute the assertion inside the callback, giving it the chance to run.\n\n```javascript\nit(\"test 1\", (done) => {\n    const userEmail = \"random@random.com\";\n\n    generateToken(userEmail, (err, token) => {\n        expect(token).toBeDefined();\n        done();\n    })\n});\n\n//This time this doesn't pass as we expected.\n//And doesn't timeout thanks to the try-catch block. \nit(\"test 2\", (done) => {\n    const userEmail = \"random@random.com\";\n\n    generateToken(userEmail, (err, token) => {\n        try {\n            expect(token).toBe(2);\n            done();\n        }\n        catch (err) {\n            done(err);\n        }\n    })\n})\n```\n\n# Promises and Async/Await\n\nAlternatively, we can also use `async` and `await` or  adding `resolves` after `expect(token)` to wait for the promise to resolve and then perform the assertion without putting `done` as an argument.\n\n```javascript\nit(\"test 1 async/await\", async () => {\n    const userEmail = \"random@random.com\";\n    const token = await generateTokenPromise(userEmail);\n    expect(token).toBeDefined();\n});\n\nit(\"test 1 .resolves()\", async () => {\n    const userEmail = \"random@random.com\";\n    return expect(generateTokenPromise(userEmail)).resolves.toBeDefined();\n})\n```\n\n\n\nSources:\n* vitest.dev\n* Academind\n\n","slug":"testing-async-code-using-vitest","published":1,"updated":"2023-08-04T09:33:37.219Z","_id":"clkwe0k580000pdiqbtfn6a1v","comments":1,"layout":"post","photos":[],"link":"","content":"<p>In this blog post, I’ll be explaining how we can implement unit tests for async JavaScript code using <a href=\"https://github.com/vitest-dev/vitest\">Vitest</a>. In the example code, we will generate JSON Web Token to understand the logic behind the async testing easier. Note that since there are no major differences between Jest and Vitest, you can also use Jest to perform the same action.</p>\n<h2 id=\"Functions-To-Generate-JWT\"><a href=\"#Functions-To-Generate-JWT\" class=\"headerlink\" title=\"Functions To Generate JWT\"></a>Functions To Generate JWT</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> jwt <span class=\"keyword\">from</span> <span class=\"string\">&#x27;jsonwebtoken&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">function</span> <span class=\"title function_\">generateToken</span>(<span class=\"params\">userEmail, doneFn</span>) &#123;</span><br><span class=\"line\">    jwt.<span class=\"title function_\">sign</span>(&#123; <span class=\"attr\">email</span>: userEmail &#125;, <span class=\"string\">&#x27;secret123&#x27;</span>, doneFn);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">function</span> <span class=\"title function_\">generateTokenPromise</span>(<span class=\"params\">userEmail</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> promise = <span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class=\"line\">        jwt.<span class=\"title function_\">sign</span>(&#123; <span class=\"attr\">email</span>: userEmail &#125;, <span class=\"string\">&#x27;secret123&#x27;</span>, <span class=\"function\">(<span class=\"params\">error, token</span>) =&gt;</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (error) &#123;</span><br><span class=\"line\">                <span class=\"title function_\">reject</span>(error);</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                <span class=\"title function_\">resolve</span>(token);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> promise;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"Wrong-Approach\"><a href=\"#Wrong-Approach\" class=\"headerlink\" title=\"Wrong Approach\"></a>Wrong Approach</h2><p>We expect JWT to be defined and the first test actually passes but does it really work? </p>\n<p>As a matter of fact, no. Because it is not waiting for the <code>generateToken</code> function to complete before the test finishes. The <code>generateToken</code> function is async, therefore the test finishes before the generateToken function has had a chance to complete and call the callback function, which means that the <code>expect(token).toBeDefined()</code> assertion is never reached.</p>\n<p>In the second test, we’re trying to generate a JWT and this time expecting it to be 2. The test once again passes, doesn’t give any error although it is pretty much impossible jsonwebtoken to generate a token which is 2.</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; it, expect &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;vitest&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; generateToken &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;./async-example&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">it</span>(<span class=\"string\">&quot;test 1&quot;</span>, <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> userEmail = <span class=\"string\">&quot;random@random.com&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"title function_\">generateToken</span>(userEmail, <span class=\"function\">(<span class=\"params\">err, token</span>) =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"title function_\">expect</span>(token).<span class=\"title function_\">toBeDefined</span>();</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">it</span>(<span class=\"string\">&quot;test 2&quot;</span>, <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> userEmail = <span class=\"string\">&quot;random@random.com&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"title function_\">generateToken</span>(userEmail, <span class=\"function\">(<span class=\"params\">err, token</span>) =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"title function_\">expect</span>(token).<span class=\"title function_\">toBe</span>(<span class=\"number\">2</span>);</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"How-To-Fix-It\"><a href=\"#How-To-Fix-It\" class=\"headerlink\" title=\"How To Fix It?\"></a>How To Fix It?</h2><p>In order to fix these problems, this time instead of putting the test in a function with an empty argument, we’re gonna use a single argument called <code>done</code>. So in that way Vitest will wait for the <code>done</code> function to be called before considering the test complete and will execute the assertion inside the callback, giving it the chance to run.</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">it</span>(<span class=\"string\">&quot;test 1&quot;</span>, <span class=\"function\">(<span class=\"params\">done</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> userEmail = <span class=\"string\">&quot;random@random.com&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"title function_\">generateToken</span>(userEmail, <span class=\"function\">(<span class=\"params\">err, token</span>) =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"title function_\">expect</span>(token).<span class=\"title function_\">toBeDefined</span>();</span><br><span class=\"line\">        <span class=\"title function_\">done</span>();</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//This time this doesn&#x27;t pass as we expected.</span></span><br><span class=\"line\"><span class=\"comment\">//And doesn&#x27;t timeout thanks to the try-catch block. </span></span><br><span class=\"line\"><span class=\"title function_\">it</span>(<span class=\"string\">&quot;test 2&quot;</span>, <span class=\"function\">(<span class=\"params\">done</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> userEmail = <span class=\"string\">&quot;random@random.com&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"title function_\">generateToken</span>(userEmail, <span class=\"function\">(<span class=\"params\">err, token</span>) =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"title function_\">expect</span>(token).<span class=\"title function_\">toBe</span>(<span class=\"number\">2</span>);</span><br><span class=\"line\">            <span class=\"title function_\">done</span>();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">catch</span> (err) &#123;</span><br><span class=\"line\">            <span class=\"title function_\">done</span>(err);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"Promises-and-Async-Await\"><a href=\"#Promises-and-Async-Await\" class=\"headerlink\" title=\"Promises and Async&#x2F;Await\"></a>Promises and Async&#x2F;Await</h1><p>Alternatively, we can also use <code>async</code> and <code>await</code> or  adding <code>resolves</code> after <code>expect(token)</code> to wait for the promise to resolve and then perform the assertion without putting <code>done</code> as an argument.</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">it</span>(<span class=\"string\">&quot;test 1 async/await&quot;</span>, <span class=\"keyword\">async</span> () =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> userEmail = <span class=\"string\">&quot;random@random.com&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> token = <span class=\"keyword\">await</span> <span class=\"title function_\">generateTokenPromise</span>(userEmail);</span><br><span class=\"line\">    <span class=\"title function_\">expect</span>(token).<span class=\"title function_\">toBeDefined</span>();</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">it</span>(<span class=\"string\">&quot;test 1 .resolves()&quot;</span>, <span class=\"keyword\">async</span> () =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> userEmail = <span class=\"string\">&quot;random@random.com&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"title function_\">expect</span>(<span class=\"title function_\">generateTokenPromise</span>(userEmail)).<span class=\"property\">resolves</span>.<span class=\"title function_\">toBeDefined</span>();</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n\n\n<p>Sources:</p>\n<ul>\n<li>vitest.dev</li>\n<li>Academind</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<p>In this blog post, I’ll be explaining how we can implement unit tests for async JavaScript code using <a href=\"https://github.com/vitest-dev/vitest\">Vitest</a>. In the example code, we will generate JSON Web Token to understand the logic behind the async testing easier. Note that since there are no major differences between Jest and Vitest, you can also use Jest to perform the same action.</p>\n<h2 id=\"Functions-To-Generate-JWT\"><a href=\"#Functions-To-Generate-JWT\" class=\"headerlink\" title=\"Functions To Generate JWT\"></a>Functions To Generate JWT</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> jwt <span class=\"keyword\">from</span> <span class=\"string\">&#x27;jsonwebtoken&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">function</span> <span class=\"title function_\">generateToken</span>(<span class=\"params\">userEmail, doneFn</span>) &#123;</span><br><span class=\"line\">    jwt.<span class=\"title function_\">sign</span>(&#123; <span class=\"attr\">email</span>: userEmail &#125;, <span class=\"string\">&#x27;secret123&#x27;</span>, doneFn);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">function</span> <span class=\"title function_\">generateTokenPromise</span>(<span class=\"params\">userEmail</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> promise = <span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class=\"line\">        jwt.<span class=\"title function_\">sign</span>(&#123; <span class=\"attr\">email</span>: userEmail &#125;, <span class=\"string\">&#x27;secret123&#x27;</span>, <span class=\"function\">(<span class=\"params\">error, token</span>) =&gt;</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (error) &#123;</span><br><span class=\"line\">                <span class=\"title function_\">reject</span>(error);</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                <span class=\"title function_\">resolve</span>(token);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> promise;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"Wrong-Approach\"><a href=\"#Wrong-Approach\" class=\"headerlink\" title=\"Wrong Approach\"></a>Wrong Approach</h2><p>We expect JWT to be defined and the first test actually passes but does it really work? </p>\n<p>As a matter of fact, no. Because it is not waiting for the <code>generateToken</code> function to complete before the test finishes. The <code>generateToken</code> function is async, therefore the test finishes before the generateToken function has had a chance to complete and call the callback function, which means that the <code>expect(token).toBeDefined()</code> assertion is never reached.</p>\n<p>In the second test, we’re trying to generate a JWT and this time expecting it to be 2. The test once again passes, doesn’t give any error although it is pretty much impossible jsonwebtoken to generate a token which is 2.</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; it, expect &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;vitest&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; generateToken &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;./async-example&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">it</span>(<span class=\"string\">&quot;test 1&quot;</span>, <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> userEmail = <span class=\"string\">&quot;random@random.com&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"title function_\">generateToken</span>(userEmail, <span class=\"function\">(<span class=\"params\">err, token</span>) =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"title function_\">expect</span>(token).<span class=\"title function_\">toBeDefined</span>();</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">it</span>(<span class=\"string\">&quot;test 2&quot;</span>, <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> userEmail = <span class=\"string\">&quot;random@random.com&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"title function_\">generateToken</span>(userEmail, <span class=\"function\">(<span class=\"params\">err, token</span>) =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"title function_\">expect</span>(token).<span class=\"title function_\">toBe</span>(<span class=\"number\">2</span>);</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"How-To-Fix-It\"><a href=\"#How-To-Fix-It\" class=\"headerlink\" title=\"How To Fix It?\"></a>How To Fix It?</h2><p>In order to fix these problems, this time instead of putting the test in a function with an empty argument, we’re gonna use a single argument called <code>done</code>. So in that way Vitest will wait for the <code>done</code> function to be called before considering the test complete and will execute the assertion inside the callback, giving it the chance to run.</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">it</span>(<span class=\"string\">&quot;test 1&quot;</span>, <span class=\"function\">(<span class=\"params\">done</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> userEmail = <span class=\"string\">&quot;random@random.com&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"title function_\">generateToken</span>(userEmail, <span class=\"function\">(<span class=\"params\">err, token</span>) =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"title function_\">expect</span>(token).<span class=\"title function_\">toBeDefined</span>();</span><br><span class=\"line\">        <span class=\"title function_\">done</span>();</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//This time this doesn&#x27;t pass as we expected.</span></span><br><span class=\"line\"><span class=\"comment\">//And doesn&#x27;t timeout thanks to the try-catch block. </span></span><br><span class=\"line\"><span class=\"title function_\">it</span>(<span class=\"string\">&quot;test 2&quot;</span>, <span class=\"function\">(<span class=\"params\">done</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> userEmail = <span class=\"string\">&quot;random@random.com&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"title function_\">generateToken</span>(userEmail, <span class=\"function\">(<span class=\"params\">err, token</span>) =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"title function_\">expect</span>(token).<span class=\"title function_\">toBe</span>(<span class=\"number\">2</span>);</span><br><span class=\"line\">            <span class=\"title function_\">done</span>();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">catch</span> (err) &#123;</span><br><span class=\"line\">            <span class=\"title function_\">done</span>(err);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"Promises-and-Async-Await\"><a href=\"#Promises-and-Async-Await\" class=\"headerlink\" title=\"Promises and Async&#x2F;Await\"></a>Promises and Async&#x2F;Await</h1><p>Alternatively, we can also use <code>async</code> and <code>await</code> or  adding <code>resolves</code> after <code>expect(token)</code> to wait for the promise to resolve and then perform the assertion without putting <code>done</code> as an argument.</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">it</span>(<span class=\"string\">&quot;test 1 async/await&quot;</span>, <span class=\"keyword\">async</span> () =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> userEmail = <span class=\"string\">&quot;random@random.com&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> token = <span class=\"keyword\">await</span> <span class=\"title function_\">generateTokenPromise</span>(userEmail);</span><br><span class=\"line\">    <span class=\"title function_\">expect</span>(token).<span class=\"title function_\">toBeDefined</span>();</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">it</span>(<span class=\"string\">&quot;test 1 .resolves()&quot;</span>, <span class=\"keyword\">async</span> () =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> userEmail = <span class=\"string\">&quot;random@random.com&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"title function_\">expect</span>(<span class=\"title function_\">generateTokenPromise</span>(userEmail)).<span class=\"property\">resolves</span>.<span class=\"title function_\">toBeDefined</span>();</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n\n\n<p>Sources:</p>\n<ul>\n<li>vitest.dev</li>\n<li>Academind</li>\n</ul>\n"},{"title":"AWS Cloud Practitioner Chronicles - Identity Access Management (IAM)","date":"2023-05-07T13:55:00.000Z","_content":"\n![AWS](https://d1.awsstatic.com/howitworks_IAM_110321.8b2290727bb2022d54416e099c87ad9dc64be5d5.jpg \"AWS\")\n\nFor my second week of preparation for the AWS Cloud Practitioner certification, I will be exploring the topic \"Identity and Access Management(IAM)\" in AWS. IAM is one of the most crucial aspects of cloud computing which enables organizations to manage access to AWS services and resources securely. \n\nIn this blog post, I will discuss the basics of IAM in AWS, including user and group management, policies, and authentication mechanisms.\n\n## An Overview\n\nIAM is a core AWS service that we use to authenticate and get authorised to access various resources. With IAM, we can create and manage user accounts, groups, and roles, and define policies that grant or deny access. Depending on our use cases and requirements, we can use one of these choices to access IAM:\n\n* AWS CLI\n* AWS Management Console\n* AWS IAM API\n* AWS SDKs\n\n## IAM Entities\n\n![AWS](https://digitalcloud.training/wp-content/uploads/2022/02/iam-users-groups-roles-policies.png \"AWS\")\n\n### IAM Users\n\nIAM users are entities that we create in AWS to represent people or services that need to interact with our AWS resources. Here are some of the essentials of them:\n\n* Users have no permissions by default.\n* AWS allows us to create up to 500 IAM users per account. Each user has a friendly name something like **Semih** and has an Amazon Resource Name(ARN) which is something like **arn:aws:iam:436494181:user/Semih**.\n* Root user has full permissions but it's generally best practice to avoid using the root user and enable **MFA**.\n\n### Federated Users\nThese kind of users are users who are authenticated and authorized by another source. For instance, we might have an account with Google or Microsoft or Facebook and we can log in there and gain access to resources. When a federated user tries to access an AWS resource, the AWS security token service (STS) verifies the user's identity and retrieves temporary security credentials that are associated with an IAM role.\n\n### Groups\nA group is basically a collection of IAM users that we can organize together in order to apply permissions to them by using policies. Organizing users into various groups may be quite efficent and help us to use AWS resources more effectively. To give an example, we might create a group called \"Developers\" and add multiple users to it who need access to AWS resources for development purposes. And then when we apply the related policy into this group all users in the \"Developers\" group will inherit the permissions defined in the policy.\n\n### Roles\nRoles are also one of the identities and with them we can easily delegate specific permissions that can be assumed by users, apps, and services without the need to share credentials like password or access keys. What's more, a role can also be assigned to a federated user and they are given a temporary set of security credentials that allows them to access the AWS resources specified in the role's policies.\n\n### Policies\n\n![AWS](https://d2908q01vomqb2.cloudfront.net/22d200f8670dbdb3e253a90eee5098477c95c23d/2018/01/30/AR2_0118_a.png \"AWS\")\nPolicies in AWS IAM, are documents that define permissions and are written in JSON format as shown in the image above. They allow us to specify which AWS resources users and groups can access and what actions they can perform on those resources. Note that all permissions are implicitly denied by default. Therefore, we need to attach policies to IAM users, groups, and roles to grant them the necessary permissions to access resources.\n\n\n\nIn conclusion, I gave an overview of IAM in AWS, discussing the different IAM entities such as users, groups, roles, and policies. I also highlighted the importance of IAM in managing access to AWS resources securely. I hope to dive into AWS Compute Services next week!","source":"_posts/AWS-Cloud-Practitioner-Chronicles-Identity-Access-Management-IAM.md","raw":"---\ntitle: AWS Cloud Practitioner Chronicles - Identity Access Management (IAM)\ndate: 2023-05-07 21:55:00 +0800\ntags: [aws, cloud computing, aws cloud practitioner]\n---\n\n![AWS](https://d1.awsstatic.com/howitworks_IAM_110321.8b2290727bb2022d54416e099c87ad9dc64be5d5.jpg \"AWS\")\n\nFor my second week of preparation for the AWS Cloud Practitioner certification, I will be exploring the topic \"Identity and Access Management(IAM)\" in AWS. IAM is one of the most crucial aspects of cloud computing which enables organizations to manage access to AWS services and resources securely. \n\nIn this blog post, I will discuss the basics of IAM in AWS, including user and group management, policies, and authentication mechanisms.\n\n## An Overview\n\nIAM is a core AWS service that we use to authenticate and get authorised to access various resources. With IAM, we can create and manage user accounts, groups, and roles, and define policies that grant or deny access. Depending on our use cases and requirements, we can use one of these choices to access IAM:\n\n* AWS CLI\n* AWS Management Console\n* AWS IAM API\n* AWS SDKs\n\n## IAM Entities\n\n![AWS](https://digitalcloud.training/wp-content/uploads/2022/02/iam-users-groups-roles-policies.png \"AWS\")\n\n### IAM Users\n\nIAM users are entities that we create in AWS to represent people or services that need to interact with our AWS resources. Here are some of the essentials of them:\n\n* Users have no permissions by default.\n* AWS allows us to create up to 500 IAM users per account. Each user has a friendly name something like **Semih** and has an Amazon Resource Name(ARN) which is something like **arn:aws:iam:436494181:user/Semih**.\n* Root user has full permissions but it's generally best practice to avoid using the root user and enable **MFA**.\n\n### Federated Users\nThese kind of users are users who are authenticated and authorized by another source. For instance, we might have an account with Google or Microsoft or Facebook and we can log in there and gain access to resources. When a federated user tries to access an AWS resource, the AWS security token service (STS) verifies the user's identity and retrieves temporary security credentials that are associated with an IAM role.\n\n### Groups\nA group is basically a collection of IAM users that we can organize together in order to apply permissions to them by using policies. Organizing users into various groups may be quite efficent and help us to use AWS resources more effectively. To give an example, we might create a group called \"Developers\" and add multiple users to it who need access to AWS resources for development purposes. And then when we apply the related policy into this group all users in the \"Developers\" group will inherit the permissions defined in the policy.\n\n### Roles\nRoles are also one of the identities and with them we can easily delegate specific permissions that can be assumed by users, apps, and services without the need to share credentials like password or access keys. What's more, a role can also be assigned to a federated user and they are given a temporary set of security credentials that allows them to access the AWS resources specified in the role's policies.\n\n### Policies\n\n![AWS](https://d2908q01vomqb2.cloudfront.net/22d200f8670dbdb3e253a90eee5098477c95c23d/2018/01/30/AR2_0118_a.png \"AWS\")\nPolicies in AWS IAM, are documents that define permissions and are written in JSON format as shown in the image above. They allow us to specify which AWS resources users and groups can access and what actions they can perform on those resources. Note that all permissions are implicitly denied by default. Therefore, we need to attach policies to IAM users, groups, and roles to grant them the necessary permissions to access resources.\n\n\n\nIn conclusion, I gave an overview of IAM in AWS, discussing the different IAM entities such as users, groups, roles, and policies. I also highlighted the importance of IAM in managing access to AWS resources securely. I hope to dive into AWS Compute Services next week!","slug":"AWS-Cloud-Practitioner-Chronicles-Identity-Access-Management-IAM","published":1,"updated":"2023-08-04T09:47:53.047Z","_id":"clkwe7s040000qciq6eju2akp","comments":1,"layout":"post","photos":[],"link":"","content":"<p><img src=\"https://d1.awsstatic.com/howitworks_IAM_110321.8b2290727bb2022d54416e099c87ad9dc64be5d5.jpg\" alt=\"AWS\" title=\"AWS\"></p>\n<p>For my second week of preparation for the AWS Cloud Practitioner certification, I will be exploring the topic “Identity and Access Management(IAM)” in AWS. IAM is one of the most crucial aspects of cloud computing which enables organizations to manage access to AWS services and resources securely. </p>\n<p>In this blog post, I will discuss the basics of IAM in AWS, including user and group management, policies, and authentication mechanisms.</p>\n<h2 id=\"An-Overview\"><a href=\"#An-Overview\" class=\"headerlink\" title=\"An Overview\"></a>An Overview</h2><p>IAM is a core AWS service that we use to authenticate and get authorised to access various resources. With IAM, we can create and manage user accounts, groups, and roles, and define policies that grant or deny access. Depending on our use cases and requirements, we can use one of these choices to access IAM:</p>\n<ul>\n<li>AWS CLI</li>\n<li>AWS Management Console</li>\n<li>AWS IAM API</li>\n<li>AWS SDKs</li>\n</ul>\n<h2 id=\"IAM-Entities\"><a href=\"#IAM-Entities\" class=\"headerlink\" title=\"IAM Entities\"></a>IAM Entities</h2><p><img src=\"https://digitalcloud.training/wp-content/uploads/2022/02/iam-users-groups-roles-policies.png\" alt=\"AWS\" title=\"AWS\"></p>\n<h3 id=\"IAM-Users\"><a href=\"#IAM-Users\" class=\"headerlink\" title=\"IAM Users\"></a>IAM Users</h3><p>IAM users are entities that we create in AWS to represent people or services that need to interact with our AWS resources. Here are some of the essentials of them:</p>\n<ul>\n<li>Users have no permissions by default.</li>\n<li>AWS allows us to create up to 500 IAM users per account. Each user has a friendly name something like <strong>Semih</strong> and has an Amazon Resource Name(ARN) which is something like <strong>arn:aws:iam:436494181:user&#x2F;Semih</strong>.</li>\n<li>Root user has full permissions but it’s generally best practice to avoid using the root user and enable <strong>MFA</strong>.</li>\n</ul>\n<h3 id=\"Federated-Users\"><a href=\"#Federated-Users\" class=\"headerlink\" title=\"Federated Users\"></a>Federated Users</h3><p>These kind of users are users who are authenticated and authorized by another source. For instance, we might have an account with Google or Microsoft or Facebook and we can log in there and gain access to resources. When a federated user tries to access an AWS resource, the AWS security token service (STS) verifies the user’s identity and retrieves temporary security credentials that are associated with an IAM role.</p>\n<h3 id=\"Groups\"><a href=\"#Groups\" class=\"headerlink\" title=\"Groups\"></a>Groups</h3><p>A group is basically a collection of IAM users that we can organize together in order to apply permissions to them by using policies. Organizing users into various groups may be quite efficent and help us to use AWS resources more effectively. To give an example, we might create a group called “Developers” and add multiple users to it who need access to AWS resources for development purposes. And then when we apply the related policy into this group all users in the “Developers” group will inherit the permissions defined in the policy.</p>\n<h3 id=\"Roles\"><a href=\"#Roles\" class=\"headerlink\" title=\"Roles\"></a>Roles</h3><p>Roles are also one of the identities and with them we can easily delegate specific permissions that can be assumed by users, apps, and services without the need to share credentials like password or access keys. What’s more, a role can also be assigned to a federated user and they are given a temporary set of security credentials that allows them to access the AWS resources specified in the role’s policies.</p>\n<h3 id=\"Policies\"><a href=\"#Policies\" class=\"headerlink\" title=\"Policies\"></a>Policies</h3><p><img src=\"https://d2908q01vomqb2.cloudfront.net/22d200f8670dbdb3e253a90eee5098477c95c23d/2018/01/30/AR2_0118_a.png\" alt=\"AWS\" title=\"AWS\"><br>Policies in AWS IAM, are documents that define permissions and are written in JSON format as shown in the image above. They allow us to specify which AWS resources users and groups can access and what actions they can perform on those resources. Note that all permissions are implicitly denied by default. Therefore, we need to attach policies to IAM users, groups, and roles to grant them the necessary permissions to access resources.</p>\n<p>In conclusion, I gave an overview of IAM in AWS, discussing the different IAM entities such as users, groups, roles, and policies. I also highlighted the importance of IAM in managing access to AWS resources securely. I hope to dive into AWS Compute Services next week!</p>\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"https://d1.awsstatic.com/howitworks_IAM_110321.8b2290727bb2022d54416e099c87ad9dc64be5d5.jpg\" alt=\"AWS\" title=\"AWS\"></p>\n<p>For my second week of preparation for the AWS Cloud Practitioner certification, I will be exploring the topic “Identity and Access Management(IAM)” in AWS. IAM is one of the most crucial aspects of cloud computing which enables organizations to manage access to AWS services and resources securely. </p>\n<p>In this blog post, I will discuss the basics of IAM in AWS, including user and group management, policies, and authentication mechanisms.</p>\n<h2 id=\"An-Overview\"><a href=\"#An-Overview\" class=\"headerlink\" title=\"An Overview\"></a>An Overview</h2><p>IAM is a core AWS service that we use to authenticate and get authorised to access various resources. With IAM, we can create and manage user accounts, groups, and roles, and define policies that grant or deny access. Depending on our use cases and requirements, we can use one of these choices to access IAM:</p>\n<ul>\n<li>AWS CLI</li>\n<li>AWS Management Console</li>\n<li>AWS IAM API</li>\n<li>AWS SDKs</li>\n</ul>\n<h2 id=\"IAM-Entities\"><a href=\"#IAM-Entities\" class=\"headerlink\" title=\"IAM Entities\"></a>IAM Entities</h2><p><img src=\"https://digitalcloud.training/wp-content/uploads/2022/02/iam-users-groups-roles-policies.png\" alt=\"AWS\" title=\"AWS\"></p>\n<h3 id=\"IAM-Users\"><a href=\"#IAM-Users\" class=\"headerlink\" title=\"IAM Users\"></a>IAM Users</h3><p>IAM users are entities that we create in AWS to represent people or services that need to interact with our AWS resources. Here are some of the essentials of them:</p>\n<ul>\n<li>Users have no permissions by default.</li>\n<li>AWS allows us to create up to 500 IAM users per account. Each user has a friendly name something like <strong>Semih</strong> and has an Amazon Resource Name(ARN) which is something like <strong>arn:aws:iam:436494181:user&#x2F;Semih</strong>.</li>\n<li>Root user has full permissions but it’s generally best practice to avoid using the root user and enable <strong>MFA</strong>.</li>\n</ul>\n<h3 id=\"Federated-Users\"><a href=\"#Federated-Users\" class=\"headerlink\" title=\"Federated Users\"></a>Federated Users</h3><p>These kind of users are users who are authenticated and authorized by another source. For instance, we might have an account with Google or Microsoft or Facebook and we can log in there and gain access to resources. When a federated user tries to access an AWS resource, the AWS security token service (STS) verifies the user’s identity and retrieves temporary security credentials that are associated with an IAM role.</p>\n<h3 id=\"Groups\"><a href=\"#Groups\" class=\"headerlink\" title=\"Groups\"></a>Groups</h3><p>A group is basically a collection of IAM users that we can organize together in order to apply permissions to them by using policies. Organizing users into various groups may be quite efficent and help us to use AWS resources more effectively. To give an example, we might create a group called “Developers” and add multiple users to it who need access to AWS resources for development purposes. And then when we apply the related policy into this group all users in the “Developers” group will inherit the permissions defined in the policy.</p>\n<h3 id=\"Roles\"><a href=\"#Roles\" class=\"headerlink\" title=\"Roles\"></a>Roles</h3><p>Roles are also one of the identities and with them we can easily delegate specific permissions that can be assumed by users, apps, and services without the need to share credentials like password or access keys. What’s more, a role can also be assigned to a federated user and they are given a temporary set of security credentials that allows them to access the AWS resources specified in the role’s policies.</p>\n<h3 id=\"Policies\"><a href=\"#Policies\" class=\"headerlink\" title=\"Policies\"></a>Policies</h3><p><img src=\"https://d2908q01vomqb2.cloudfront.net/22d200f8670dbdb3e253a90eee5098477c95c23d/2018/01/30/AR2_0118_a.png\" alt=\"AWS\" title=\"AWS\"><br>Policies in AWS IAM, are documents that define permissions and are written in JSON format as shown in the image above. They allow us to specify which AWS resources users and groups can access and what actions they can perform on those resources. Note that all permissions are implicitly denied by default. Therefore, we need to attach policies to IAM users, groups, and roles to grant them the necessary permissions to access resources.</p>\n<p>In conclusion, I gave an overview of IAM in AWS, discussing the different IAM entities such as users, groups, roles, and policies. I also highlighted the importance of IAM in managing access to AWS resources securely. I hope to dive into AWS Compute Services next week!</p>\n"},{"title":"Essentials of Transactions in PostgreSQL","date":"2023-04-22T14:25:00.000Z","_content":"\nIt is quite essential to understand the transactions in order to build robust and reliable applications. In this blog post I'll be explaining what a transaction is and what key concepts we should keep in mind when using PostgreSQL.\n\n## Transactions\n\nIn almost every database, including Postgres, a transaction refers to a set of database operations that we want to do together. In other words, a transaction is a way to group multiple operations like updates, deletes and inserts, into a single logical unit.\n\n## An Example From Transfering Money\n\nLet's say that we have an \"accounts\" table where we basically store information about bank accounts, including the customer's name and balance. In this scenario we will be transfering money from one account to another.\n\n```sql\nCREATE TABLE accounts (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(20) NOT NULL,\n    balance INTEGER NOT NULL\n);\n```\n\n```sql\nINSERT INTO accounts (name, balance)\nVALUES  ('Semih',200),('Gilfoyle',200);\n```\n## Opening Transactions\n\n```sql\nBEGIN;\n```\n\nAt the beginning, before opening a transaction let's say that we do have 3 connections to the database and they all connected to the main data pool. \n\nWhen we want to open a transaction using the BEGIN keyword, we need to specify which connection we want to use. For example, we might type BEGIN; to open a transaction on the current connection. If we want to open a transaction on a different connection, we would need to switch to it first using the appropriate command. \n\nAs soon as we open up a transaction,(let's say, on connection number 1) we can imagine this process like our database is creating a seperate workspace for that connection. This workspace is isolated from other transactions and is used exclusively for the statements executed within the transaction. No other connections are going to see those changes that we made in that so called seperate workspace.\n\n# Making Changes In Connection #1\n\nIn the connection #1 where we opened a transaction earlier, let's update the first user's account by reducing its balance and increment the second user's balance.\n\n```sql\nUPDATE accounts\n\nSET balance = balance - 50\n\nWHERE name = 'Semih'\n```\n\n```sql\nUPDATE accounts\n\nSET balance = balance + 50\n\nWHERE name = 'Gilfoyle'\n```\n\n\nThis is the balance result when we run ``` SELECT * FROM accounts``` after the updates:\n\n* Semih's Balance: 150\n* Gilfoyle's Balance: 250\n\nBut when we switch back to the Connection #2 and run the same query we see that nothing has changed:\n\n* Semih's Balance: 200\n* Gilfoyle's Balance: 200\n\n# How to Merge These Changes Into the Main Data Pool?\n\nTo merge the changes made within a transaction into the main data pool and make them visible to everyone, committing the transaction is necessary. \n\nHowever, in some cases, rolling back the transaction may be necessary to undo the changes we made and revert the database to its previous state. What's more, PostgreSQL can also automatically clean up transactions in specific situations, such as when a client disconnects or a server crash occurs. In these cases, any uncommitted transactions will be rolled back to maintain consistency in the database.\n\n","source":"_posts/Essentials-of-Transactions-in-PostgreSQL.md","raw":"---\ntitle: Essentials of Transactions in PostgreSQL\ndate: 2023-04-22 22:25:00 +0800\ntags: [transaction, postgresql,database]\n---\n\nIt is quite essential to understand the transactions in order to build robust and reliable applications. In this blog post I'll be explaining what a transaction is and what key concepts we should keep in mind when using PostgreSQL.\n\n## Transactions\n\nIn almost every database, including Postgres, a transaction refers to a set of database operations that we want to do together. In other words, a transaction is a way to group multiple operations like updates, deletes and inserts, into a single logical unit.\n\n## An Example From Transfering Money\n\nLet's say that we have an \"accounts\" table where we basically store information about bank accounts, including the customer's name and balance. In this scenario we will be transfering money from one account to another.\n\n```sql\nCREATE TABLE accounts (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(20) NOT NULL,\n    balance INTEGER NOT NULL\n);\n```\n\n```sql\nINSERT INTO accounts (name, balance)\nVALUES  ('Semih',200),('Gilfoyle',200);\n```\n## Opening Transactions\n\n```sql\nBEGIN;\n```\n\nAt the beginning, before opening a transaction let's say that we do have 3 connections to the database and they all connected to the main data pool. \n\nWhen we want to open a transaction using the BEGIN keyword, we need to specify which connection we want to use. For example, we might type BEGIN; to open a transaction on the current connection. If we want to open a transaction on a different connection, we would need to switch to it first using the appropriate command. \n\nAs soon as we open up a transaction,(let's say, on connection number 1) we can imagine this process like our database is creating a seperate workspace for that connection. This workspace is isolated from other transactions and is used exclusively for the statements executed within the transaction. No other connections are going to see those changes that we made in that so called seperate workspace.\n\n# Making Changes In Connection #1\n\nIn the connection #1 where we opened a transaction earlier, let's update the first user's account by reducing its balance and increment the second user's balance.\n\n```sql\nUPDATE accounts\n\nSET balance = balance - 50\n\nWHERE name = 'Semih'\n```\n\n```sql\nUPDATE accounts\n\nSET balance = balance + 50\n\nWHERE name = 'Gilfoyle'\n```\n\n\nThis is the balance result when we run ``` SELECT * FROM accounts``` after the updates:\n\n* Semih's Balance: 150\n* Gilfoyle's Balance: 250\n\nBut when we switch back to the Connection #2 and run the same query we see that nothing has changed:\n\n* Semih's Balance: 200\n* Gilfoyle's Balance: 200\n\n# How to Merge These Changes Into the Main Data Pool?\n\nTo merge the changes made within a transaction into the main data pool and make them visible to everyone, committing the transaction is necessary. \n\nHowever, in some cases, rolling back the transaction may be necessary to undo the changes we made and revert the database to its previous state. What's more, PostgreSQL can also automatically clean up transactions in specific situations, such as when a client disconnects or a server crash occurs. In these cases, any uncommitted transactions will be rolled back to maintain consistency in the database.\n\n","slug":"Essentials-of-Transactions-in-PostgreSQL","published":1,"updated":"2023-08-04T10:14:09.391Z","_id":"clkwe7s070001qciq323q5fm5","comments":1,"layout":"post","photos":[],"link":"","content":"<p>It is quite essential to understand the transactions in order to build robust and reliable applications. In this blog post I’ll be explaining what a transaction is and what key concepts we should keep in mind when using PostgreSQL.</p>\n<h2 id=\"Transactions\"><a href=\"#Transactions\" class=\"headerlink\" title=\"Transactions\"></a>Transactions</h2><p>In almost every database, including Postgres, a transaction refers to a set of database operations that we want to do together. In other words, a transaction is a way to group multiple operations like updates, deletes and inserts, into a single logical unit.</p>\n<h2 id=\"An-Example-From-Transfering-Money\"><a href=\"#An-Example-From-Transfering-Money\" class=\"headerlink\" title=\"An Example From Transfering Money\"></a>An Example From Transfering Money</h2><p>Let’s say that we have an “accounts” table where we basically store information about bank accounts, including the customer’s name and balance. In this scenario we will be transfering money from one account to another.</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> accounts (</span><br><span class=\"line\">    id SERIAL <span class=\"keyword\">PRIMARY</span> KEY,</span><br><span class=\"line\">    name <span class=\"type\">VARCHAR</span>(<span class=\"number\">20</span>) <span class=\"keyword\">NOT</span> <span class=\"keyword\">NULL</span>,</span><br><span class=\"line\">    balance <span class=\"type\">INTEGER</span> <span class=\"keyword\">NOT</span> <span class=\"keyword\">NULL</span></span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> accounts (name, balance)</span><br><span class=\"line\"><span class=\"keyword\">VALUES</span>  (<span class=\"string\">&#x27;Semih&#x27;</span>,<span class=\"number\">200</span>),(<span class=\"string\">&#x27;Gilfoyle&#x27;</span>,<span class=\"number\">200</span>);</span><br></pre></td></tr></table></figure>\n<h2 id=\"Opening-Transactions\"><a href=\"#Opening-Transactions\" class=\"headerlink\" title=\"Opening Transactions\"></a>Opening Transactions</h2><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">BEGIN</span>;</span><br></pre></td></tr></table></figure>\n\n<p>At the beginning, before opening a transaction let’s say that we do have 3 connections to the database and they all connected to the main data pool. </p>\n<p>When we want to open a transaction using the BEGIN keyword, we need to specify which connection we want to use. For example, we might type BEGIN; to open a transaction on the current connection. If we want to open a transaction on a different connection, we would need to switch to it first using the appropriate command. </p>\n<p>As soon as we open up a transaction,(let’s say, on connection number 1) we can imagine this process like our database is creating a seperate workspace for that connection. This workspace is isolated from other transactions and is used exclusively for the statements executed within the transaction. No other connections are going to see those changes that we made in that so called seperate workspace.</p>\n<h1 id=\"Making-Changes-In-Connection-1\"><a href=\"#Making-Changes-In-Connection-1\" class=\"headerlink\" title=\"Making Changes In Connection #1\"></a>Making Changes In Connection #1</h1><p>In the connection #1 where we opened a transaction earlier, let’s update the first user’s account by reducing its balance and increment the second user’s balance.</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">UPDATE</span> accounts</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SET</span> balance <span class=\"operator\">=</span> balance <span class=\"operator\">-</span> <span class=\"number\">50</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> name <span class=\"operator\">=</span> <span class=\"string\">&#x27;Semih&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">UPDATE</span> accounts</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SET</span> balance <span class=\"operator\">=</span> balance <span class=\"operator\">+</span> <span class=\"number\">50</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> name <span class=\"operator\">=</span> <span class=\"string\">&#x27;Gilfoyle&#x27;</span></span><br></pre></td></tr></table></figure>\n\n\n<p>This is the balance result when we run <code> SELECT * FROM accounts</code> after the updates:</p>\n<ul>\n<li>Semih’s Balance: 150</li>\n<li>Gilfoyle’s Balance: 250</li>\n</ul>\n<p>But when we switch back to the Connection #2 and run the same query we see that nothing has changed:</p>\n<ul>\n<li>Semih’s Balance: 200</li>\n<li>Gilfoyle’s Balance: 200</li>\n</ul>\n<h1 id=\"How-to-Merge-These-Changes-Into-the-Main-Data-Pool\"><a href=\"#How-to-Merge-These-Changes-Into-the-Main-Data-Pool\" class=\"headerlink\" title=\"How to Merge These Changes Into the Main Data Pool?\"></a>How to Merge These Changes Into the Main Data Pool?</h1><p>To merge the changes made within a transaction into the main data pool and make them visible to everyone, committing the transaction is necessary. </p>\n<p>However, in some cases, rolling back the transaction may be necessary to undo the changes we made and revert the database to its previous state. What’s more, PostgreSQL can also automatically clean up transactions in specific situations, such as when a client disconnects or a server crash occurs. In these cases, any uncommitted transactions will be rolled back to maintain consistency in the database.</p>\n","site":{"data":{}},"excerpt":"","more":"<p>It is quite essential to understand the transactions in order to build robust and reliable applications. In this blog post I’ll be explaining what a transaction is and what key concepts we should keep in mind when using PostgreSQL.</p>\n<h2 id=\"Transactions\"><a href=\"#Transactions\" class=\"headerlink\" title=\"Transactions\"></a>Transactions</h2><p>In almost every database, including Postgres, a transaction refers to a set of database operations that we want to do together. In other words, a transaction is a way to group multiple operations like updates, deletes and inserts, into a single logical unit.</p>\n<h2 id=\"An-Example-From-Transfering-Money\"><a href=\"#An-Example-From-Transfering-Money\" class=\"headerlink\" title=\"An Example From Transfering Money\"></a>An Example From Transfering Money</h2><p>Let’s say that we have an “accounts” table where we basically store information about bank accounts, including the customer’s name and balance. In this scenario we will be transfering money from one account to another.</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> accounts (</span><br><span class=\"line\">    id SERIAL <span class=\"keyword\">PRIMARY</span> KEY,</span><br><span class=\"line\">    name <span class=\"type\">VARCHAR</span>(<span class=\"number\">20</span>) <span class=\"keyword\">NOT</span> <span class=\"keyword\">NULL</span>,</span><br><span class=\"line\">    balance <span class=\"type\">INTEGER</span> <span class=\"keyword\">NOT</span> <span class=\"keyword\">NULL</span></span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> accounts (name, balance)</span><br><span class=\"line\"><span class=\"keyword\">VALUES</span>  (<span class=\"string\">&#x27;Semih&#x27;</span>,<span class=\"number\">200</span>),(<span class=\"string\">&#x27;Gilfoyle&#x27;</span>,<span class=\"number\">200</span>);</span><br></pre></td></tr></table></figure>\n<h2 id=\"Opening-Transactions\"><a href=\"#Opening-Transactions\" class=\"headerlink\" title=\"Opening Transactions\"></a>Opening Transactions</h2><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">BEGIN</span>;</span><br></pre></td></tr></table></figure>\n\n<p>At the beginning, before opening a transaction let’s say that we do have 3 connections to the database and they all connected to the main data pool. </p>\n<p>When we want to open a transaction using the BEGIN keyword, we need to specify which connection we want to use. For example, we might type BEGIN; to open a transaction on the current connection. If we want to open a transaction on a different connection, we would need to switch to it first using the appropriate command. </p>\n<p>As soon as we open up a transaction,(let’s say, on connection number 1) we can imagine this process like our database is creating a seperate workspace for that connection. This workspace is isolated from other transactions and is used exclusively for the statements executed within the transaction. No other connections are going to see those changes that we made in that so called seperate workspace.</p>\n<h1 id=\"Making-Changes-In-Connection-1\"><a href=\"#Making-Changes-In-Connection-1\" class=\"headerlink\" title=\"Making Changes In Connection #1\"></a>Making Changes In Connection #1</h1><p>In the connection #1 where we opened a transaction earlier, let’s update the first user’s account by reducing its balance and increment the second user’s balance.</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">UPDATE</span> accounts</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SET</span> balance <span class=\"operator\">=</span> balance <span class=\"operator\">-</span> <span class=\"number\">50</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> name <span class=\"operator\">=</span> <span class=\"string\">&#x27;Semih&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">UPDATE</span> accounts</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SET</span> balance <span class=\"operator\">=</span> balance <span class=\"operator\">+</span> <span class=\"number\">50</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> name <span class=\"operator\">=</span> <span class=\"string\">&#x27;Gilfoyle&#x27;</span></span><br></pre></td></tr></table></figure>\n\n\n<p>This is the balance result when we run <code> SELECT * FROM accounts</code> after the updates:</p>\n<ul>\n<li>Semih’s Balance: 150</li>\n<li>Gilfoyle’s Balance: 250</li>\n</ul>\n<p>But when we switch back to the Connection #2 and run the same query we see that nothing has changed:</p>\n<ul>\n<li>Semih’s Balance: 200</li>\n<li>Gilfoyle’s Balance: 200</li>\n</ul>\n<h1 id=\"How-to-Merge-These-Changes-Into-the-Main-Data-Pool\"><a href=\"#How-to-Merge-These-Changes-Into-the-Main-Data-Pool\" class=\"headerlink\" title=\"How to Merge These Changes Into the Main Data Pool?\"></a>How to Merge These Changes Into the Main Data Pool?</h1><p>To merge the changes made within a transaction into the main data pool and make them visible to everyone, committing the transaction is necessary. </p>\n<p>However, in some cases, rolling back the transaction may be necessary to undo the changes we made and revert the database to its previous state. What’s more, PostgreSQL can also automatically clean up transactions in specific situations, such as when a client disconnects or a server crash occurs. In these cases, any uncommitted transactions will be rolled back to maintain consistency in the database.</p>\n"},{"title":"AWS Cloud Practitioner Chronicles - The Infrastructure","date":"2023-04-28T14:55:00.000Z","_content":"\n![AWS](https://allcode.com/wp-content/uploads/2021/02/Group-169-3.png \"AWS\")\n\nTo help me stay on track and document my progress during my preparation for AWS Cloud Practitioner certification, I've decided to start a blog post series where I will share my experiences. By doing so, I hope to inspire and motivate others who are also interested in cloud computing and create a record of my own growth and development in this field. I'll be using materials like AWS Skill Builder, Digital Cloud and so on during the preparation.\n\n\n## The AWS Global Infrastructure\n\nAs of April 2023, AWS has 31 launched regions and 99 availability zones in total. A region normally consists of 3 or more availability zones. Each region is completely independent but the availability zones in a region are connected through low-latency links. We can also replicate data within a region and between regions using private or public internet connections.\n\nOn the other hand, an availability zone is basically a data center facility that is located within a region and each with redundant power, networking, and connectivity, housed in separate facilities. AZs span one or more data centers and have direct, low-latency, high throughput, and redundant network connections between each other.\nAn availability zone is represented by a region code followed by a letter identifier; for example, us-east-1a\n\n![Zones](https://d2908q01vomqb2.cloudfront.net/9e6a55b6b4563e652a23be9d623ca5055c356940/2022/03/23/infografi%CC%81a-aws-local-zones-english-map-1080.png \"Zones\")\n\n### Local Zones\n\nLocal zones are extension of an AWS region where they are closer to the end-users. They can place compute, storage and other selected AWS services with high bandwith, secure connection and so on and so forth.\n\nWith local zones, we can easily run highly demanding applications that require single-digit millisecond latencies to our end-users.\n\n### Wavelength Zones\n\nThese kind of zones are similar to local zones except they're for 5G connectivity. They are essentially extensions of existing AWS Regions that are deployed in close proximity to 5G network operators’ data centers.\n\nBy placing compute and storage resources in Wavelength Zones, developers can deliver their applications with single-digit millisecond latencies to end-users. This enables new applications that were not previously possible due to latency issues, such as gaming, augmented and virtual reality, industrial automation, and autonomous vehicles, to name a few.\n\n\n### Outposts\n\nAWS outposts is basically a hardware from AWS where we can deploy in our own data center which brings some native AWS services, infrastructure and operating models to virtually any data center. They can also connected to a region for other AWS services as well. \n\n\n### Cloudfront\n\nAWS cloudfront is a CDN and its mission is naturally to deliver the static and dynamic content, including websites, APIs, video streams, and other web applications to users. It works by caching content(regional edge cache) at edge locations around the world, which are AWS-managed data centers that are located closer to end-users. \n\n\n![Cloudfront](https://digitalcloud.training/wp-content/uploads/2022/02/aws-cloudfront-edge-cache.png \"Cloudfront\")\n\nTo give an example, if we're in Turkey, then when we try to access a video that's being shared through cloudfront, we're going to get that video from an edge location that is close to us. This results in better performance.\n\n## The AWS Shared Responsibility Model\n![Shared Responsibility](https://d1.awsstatic.com/security-center/Shared_Responsibility_Model_V2.59d1eccec334b366627e9295b304202faf7b899b.jpg \"Shared Responsibility\")\n\nThe shared responsibility model is a concept in cloud computing that outlines the responsibilities of both the cloud provider and the customer for securing and managing the cloud environment. This image is from AWS' website and it clearly specifies the responsibilites.\n\nThe AWS is responsible for the security and maintenance of the underlying cloud infrastructure, while the customer is responsible for securing and managing their own applications, data, and access to the cloud resources they use.\n","source":"_posts/AWS-Cloud-Practitioner-Chronicles-The-Infrastructure.md","raw":"---\ntitle: AWS Cloud Practitioner Chronicles - The Infrastructure\ndate: 2023-04-28 22:55:00 +0800\ntags: [aws, cloud computing, aws cloud practitioner]\n---\n\n![AWS](https://allcode.com/wp-content/uploads/2021/02/Group-169-3.png \"AWS\")\n\nTo help me stay on track and document my progress during my preparation for AWS Cloud Practitioner certification, I've decided to start a blog post series where I will share my experiences. By doing so, I hope to inspire and motivate others who are also interested in cloud computing and create a record of my own growth and development in this field. I'll be using materials like AWS Skill Builder, Digital Cloud and so on during the preparation.\n\n\n## The AWS Global Infrastructure\n\nAs of April 2023, AWS has 31 launched regions and 99 availability zones in total. A region normally consists of 3 or more availability zones. Each region is completely independent but the availability zones in a region are connected through low-latency links. We can also replicate data within a region and between regions using private or public internet connections.\n\nOn the other hand, an availability zone is basically a data center facility that is located within a region and each with redundant power, networking, and connectivity, housed in separate facilities. AZs span one or more data centers and have direct, low-latency, high throughput, and redundant network connections between each other.\nAn availability zone is represented by a region code followed by a letter identifier; for example, us-east-1a\n\n![Zones](https://d2908q01vomqb2.cloudfront.net/9e6a55b6b4563e652a23be9d623ca5055c356940/2022/03/23/infografi%CC%81a-aws-local-zones-english-map-1080.png \"Zones\")\n\n### Local Zones\n\nLocal zones are extension of an AWS region where they are closer to the end-users. They can place compute, storage and other selected AWS services with high bandwith, secure connection and so on and so forth.\n\nWith local zones, we can easily run highly demanding applications that require single-digit millisecond latencies to our end-users.\n\n### Wavelength Zones\n\nThese kind of zones are similar to local zones except they're for 5G connectivity. They are essentially extensions of existing AWS Regions that are deployed in close proximity to 5G network operators’ data centers.\n\nBy placing compute and storage resources in Wavelength Zones, developers can deliver their applications with single-digit millisecond latencies to end-users. This enables new applications that were not previously possible due to latency issues, such as gaming, augmented and virtual reality, industrial automation, and autonomous vehicles, to name a few.\n\n\n### Outposts\n\nAWS outposts is basically a hardware from AWS where we can deploy in our own data center which brings some native AWS services, infrastructure and operating models to virtually any data center. They can also connected to a region for other AWS services as well. \n\n\n### Cloudfront\n\nAWS cloudfront is a CDN and its mission is naturally to deliver the static and dynamic content, including websites, APIs, video streams, and other web applications to users. It works by caching content(regional edge cache) at edge locations around the world, which are AWS-managed data centers that are located closer to end-users. \n\n\n![Cloudfront](https://digitalcloud.training/wp-content/uploads/2022/02/aws-cloudfront-edge-cache.png \"Cloudfront\")\n\nTo give an example, if we're in Turkey, then when we try to access a video that's being shared through cloudfront, we're going to get that video from an edge location that is close to us. This results in better performance.\n\n## The AWS Shared Responsibility Model\n![Shared Responsibility](https://d1.awsstatic.com/security-center/Shared_Responsibility_Model_V2.59d1eccec334b366627e9295b304202faf7b899b.jpg \"Shared Responsibility\")\n\nThe shared responsibility model is a concept in cloud computing that outlines the responsibilities of both the cloud provider and the customer for securing and managing the cloud environment. This image is from AWS' website and it clearly specifies the responsibilites.\n\nThe AWS is responsible for the security and maintenance of the underlying cloud infrastructure, while the customer is responsible for securing and managing their own applications, data, and access to the cloud resources they use.\n","slug":"AWS-Cloud-Practitioner-Chronicles-The-Infrastructure","published":1,"updated":"2023-08-04T09:35:22.433Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clkwe7s090003qciqha7w3z8o","content":"<p><img src=\"https://allcode.com/wp-content/uploads/2021/02/Group-169-3.png\" alt=\"AWS\" title=\"AWS\"></p>\n<p>To help me stay on track and document my progress during my preparation for AWS Cloud Practitioner certification, I’ve decided to start a blog post series where I will share my experiences. By doing so, I hope to inspire and motivate others who are also interested in cloud computing and create a record of my own growth and development in this field. I’ll be using materials like AWS Skill Builder, Digital Cloud and so on during the preparation.</p>\n<h2 id=\"The-AWS-Global-Infrastructure\"><a href=\"#The-AWS-Global-Infrastructure\" class=\"headerlink\" title=\"The AWS Global Infrastructure\"></a>The AWS Global Infrastructure</h2><p>As of April 2023, AWS has 31 launched regions and 99 availability zones in total. A region normally consists of 3 or more availability zones. Each region is completely independent but the availability zones in a region are connected through low-latency links. We can also replicate data within a region and between regions using private or public internet connections.</p>\n<p>On the other hand, an availability zone is basically a data center facility that is located within a region and each with redundant power, networking, and connectivity, housed in separate facilities. AZs span one or more data centers and have direct, low-latency, high throughput, and redundant network connections between each other.<br>An availability zone is represented by a region code followed by a letter identifier; for example, us-east-1a</p>\n<p><img src=\"https://d2908q01vomqb2.cloudfront.net/9e6a55b6b4563e652a23be9d623ca5055c356940/2022/03/23/infografi%CC%81a-aws-local-zones-english-map-1080.png\" alt=\"Zones\" title=\"Zones\"></p>\n<h3 id=\"Local-Zones\"><a href=\"#Local-Zones\" class=\"headerlink\" title=\"Local Zones\"></a>Local Zones</h3><p>Local zones are extension of an AWS region where they are closer to the end-users. They can place compute, storage and other selected AWS services with high bandwith, secure connection and so on and so forth.</p>\n<p>With local zones, we can easily run highly demanding applications that require single-digit millisecond latencies to our end-users.</p>\n<h3 id=\"Wavelength-Zones\"><a href=\"#Wavelength-Zones\" class=\"headerlink\" title=\"Wavelength Zones\"></a>Wavelength Zones</h3><p>These kind of zones are similar to local zones except they’re for 5G connectivity. They are essentially extensions of existing AWS Regions that are deployed in close proximity to 5G network operators’ data centers.</p>\n<p>By placing compute and storage resources in Wavelength Zones, developers can deliver their applications with single-digit millisecond latencies to end-users. This enables new applications that were not previously possible due to latency issues, such as gaming, augmented and virtual reality, industrial automation, and autonomous vehicles, to name a few.</p>\n<h3 id=\"Outposts\"><a href=\"#Outposts\" class=\"headerlink\" title=\"Outposts\"></a>Outposts</h3><p>AWS outposts is basically a hardware from AWS where we can deploy in our own data center which brings some native AWS services, infrastructure and operating models to virtually any data center. They can also connected to a region for other AWS services as well. </p>\n<h3 id=\"Cloudfront\"><a href=\"#Cloudfront\" class=\"headerlink\" title=\"Cloudfront\"></a>Cloudfront</h3><p>AWS cloudfront is a CDN and its mission is naturally to deliver the static and dynamic content, including websites, APIs, video streams, and other web applications to users. It works by caching content(regional edge cache) at edge locations around the world, which are AWS-managed data centers that are located closer to end-users. </p>\n<p><img src=\"https://digitalcloud.training/wp-content/uploads/2022/02/aws-cloudfront-edge-cache.png\" alt=\"Cloudfront\" title=\"Cloudfront\"></p>\n<p>To give an example, if we’re in Turkey, then when we try to access a video that’s being shared through cloudfront, we’re going to get that video from an edge location that is close to us. This results in better performance.</p>\n<h2 id=\"The-AWS-Shared-Responsibility-Model\"><a href=\"#The-AWS-Shared-Responsibility-Model\" class=\"headerlink\" title=\"The AWS Shared Responsibility Model\"></a>The AWS Shared Responsibility Model</h2><p><img src=\"https://d1.awsstatic.com/security-center/Shared_Responsibility_Model_V2.59d1eccec334b366627e9295b304202faf7b899b.jpg\" alt=\"Shared Responsibility\" title=\"Shared Responsibility\"></p>\n<p>The shared responsibility model is a concept in cloud computing that outlines the responsibilities of both the cloud provider and the customer for securing and managing the cloud environment. This image is from AWS’ website and it clearly specifies the responsibilites.</p>\n<p>The AWS is responsible for the security and maintenance of the underlying cloud infrastructure, while the customer is responsible for securing and managing their own applications, data, and access to the cloud resources they use.</p>\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"https://allcode.com/wp-content/uploads/2021/02/Group-169-3.png\" alt=\"AWS\" title=\"AWS\"></p>\n<p>To help me stay on track and document my progress during my preparation for AWS Cloud Practitioner certification, I’ve decided to start a blog post series where I will share my experiences. By doing so, I hope to inspire and motivate others who are also interested in cloud computing and create a record of my own growth and development in this field. I’ll be using materials like AWS Skill Builder, Digital Cloud and so on during the preparation.</p>\n<h2 id=\"The-AWS-Global-Infrastructure\"><a href=\"#The-AWS-Global-Infrastructure\" class=\"headerlink\" title=\"The AWS Global Infrastructure\"></a>The AWS Global Infrastructure</h2><p>As of April 2023, AWS has 31 launched regions and 99 availability zones in total. A region normally consists of 3 or more availability zones. Each region is completely independent but the availability zones in a region are connected through low-latency links. We can also replicate data within a region and between regions using private or public internet connections.</p>\n<p>On the other hand, an availability zone is basically a data center facility that is located within a region and each with redundant power, networking, and connectivity, housed in separate facilities. AZs span one or more data centers and have direct, low-latency, high throughput, and redundant network connections between each other.<br>An availability zone is represented by a region code followed by a letter identifier; for example, us-east-1a</p>\n<p><img src=\"https://d2908q01vomqb2.cloudfront.net/9e6a55b6b4563e652a23be9d623ca5055c356940/2022/03/23/infografi%CC%81a-aws-local-zones-english-map-1080.png\" alt=\"Zones\" title=\"Zones\"></p>\n<h3 id=\"Local-Zones\"><a href=\"#Local-Zones\" class=\"headerlink\" title=\"Local Zones\"></a>Local Zones</h3><p>Local zones are extension of an AWS region where they are closer to the end-users. They can place compute, storage and other selected AWS services with high bandwith, secure connection and so on and so forth.</p>\n<p>With local zones, we can easily run highly demanding applications that require single-digit millisecond latencies to our end-users.</p>\n<h3 id=\"Wavelength-Zones\"><a href=\"#Wavelength-Zones\" class=\"headerlink\" title=\"Wavelength Zones\"></a>Wavelength Zones</h3><p>These kind of zones are similar to local zones except they’re for 5G connectivity. They are essentially extensions of existing AWS Regions that are deployed in close proximity to 5G network operators’ data centers.</p>\n<p>By placing compute and storage resources in Wavelength Zones, developers can deliver their applications with single-digit millisecond latencies to end-users. This enables new applications that were not previously possible due to latency issues, such as gaming, augmented and virtual reality, industrial automation, and autonomous vehicles, to name a few.</p>\n<h3 id=\"Outposts\"><a href=\"#Outposts\" class=\"headerlink\" title=\"Outposts\"></a>Outposts</h3><p>AWS outposts is basically a hardware from AWS where we can deploy in our own data center which brings some native AWS services, infrastructure and operating models to virtually any data center. They can also connected to a region for other AWS services as well. </p>\n<h3 id=\"Cloudfront\"><a href=\"#Cloudfront\" class=\"headerlink\" title=\"Cloudfront\"></a>Cloudfront</h3><p>AWS cloudfront is a CDN and its mission is naturally to deliver the static and dynamic content, including websites, APIs, video streams, and other web applications to users. It works by caching content(regional edge cache) at edge locations around the world, which are AWS-managed data centers that are located closer to end-users. </p>\n<p><img src=\"https://digitalcloud.training/wp-content/uploads/2022/02/aws-cloudfront-edge-cache.png\" alt=\"Cloudfront\" title=\"Cloudfront\"></p>\n<p>To give an example, if we’re in Turkey, then when we try to access a video that’s being shared through cloudfront, we’re going to get that video from an edge location that is close to us. This results in better performance.</p>\n<h2 id=\"The-AWS-Shared-Responsibility-Model\"><a href=\"#The-AWS-Shared-Responsibility-Model\" class=\"headerlink\" title=\"The AWS Shared Responsibility Model\"></a>The AWS Shared Responsibility Model</h2><p><img src=\"https://d1.awsstatic.com/security-center/Shared_Responsibility_Model_V2.59d1eccec334b366627e9295b304202faf7b899b.jpg\" alt=\"Shared Responsibility\" title=\"Shared Responsibility\"></p>\n<p>The shared responsibility model is a concept in cloud computing that outlines the responsibilities of both the cloud provider and the customer for securing and managing the cloud environment. This image is from AWS’ website and it clearly specifies the responsibilites.</p>\n<p>The AWS is responsible for the security and maintenance of the underlying cloud infrastructure, while the customer is responsible for securing and managing their own applications, data, and access to the cloud resources they use.</p>\n"},{"title":"Hello World Again!","date":"2023-08-04T10:07:29.000Z","_content":"\nFor a while, I've used one of the themes of Jekyll called [Chirpy](https://github.com/cotes2020/jekyll-theme-chirpy#readme) for my blog but nowadays it started look very boring and formal too me. So I've decided to give Cactus theme a shot. I hope I can be consistent in blogging from now on.","source":"_posts/Cactus-Theme.md","raw":"---\ntitle: Hello World Again!\ndate: 2023-08-04 13:07:29\ntags:\n---\n\nFor a while, I've used one of the themes of Jekyll called [Chirpy](https://github.com/cotes2020/jekyll-theme-chirpy#readme) for my blog but nowadays it started look very boring and formal too me. So I've decided to give Cactus theme a shot. I hope I can be consistent in blogging from now on.","slug":"Cactus-Theme","published":1,"updated":"2023-08-04T10:14:32.561Z","_id":"clkwfecf100009siq1i4y98vl","comments":1,"layout":"post","photos":[],"link":"","content":"<p>For a while, I’ve used one of the themes of Jekyll called <a href=\"https://github.com/cotes2020/jekyll-theme-chirpy#readme\">Chirpy</a> for my blog but nowadays it started look very boring and formal too me. So I’ve decided to give Cactus theme a shot. I hope I can be consistent in blogging from now on.</p>\n","site":{"data":{}},"excerpt":"","more":"<p>For a while, I’ve used one of the themes of Jekyll called <a href=\"https://github.com/cotes2020/jekyll-theme-chirpy#readme\">Chirpy</a> for my blog but nowadays it started look very boring and formal too me. So I’ve decided to give Cactus theme a shot. I hope I can be consistent in blogging from now on.</p>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"clkwe0k580000pdiqbtfn6a1v","tag_id":"clkwe0k5b0001pdiqcz7kfg36","_id":"clkwe0k5e0005pdiqd262grbk"},{"post_id":"clkwe0k580000pdiqbtfn6a1v","tag_id":"clkwe0k5c0002pdiq9baf3lka","_id":"clkwe0k5e0006pdiqby6q5556"},{"post_id":"clkwe0k580000pdiqbtfn6a1v","tag_id":"clkwe0k5d0003pdiq7c627cg3","_id":"clkwe0k5e0007pdiq8dnobr9o"},{"post_id":"clkwe0k580000pdiqbtfn6a1v","tag_id":"clkwe0k5d0004pdiq19q28lth","_id":"clkwe0k5e0008pdiq8lxoela4"},{"post_id":"clkwe7s040000qciq6eju2akp","tag_id":"clkwe7s080002qciq6ef49xfe","_id":"clkwe7s0b0007qciq0x4612ep"},{"post_id":"clkwe7s040000qciq6eju2akp","tag_id":"clkwe7s0a0004qciq2s665a6b","_id":"clkwe7s0b0008qciq2ygi7alg"},{"post_id":"clkwe7s040000qciq6eju2akp","tag_id":"clkwe7s0b0005qciq4epd87mt","_id":"clkwe7s0c000aqciq0kvpc1r0"},{"post_id":"clkwe7s070001qciq323q5fm5","tag_id":"clkwe7s0b0006qciqhev1a8nn","_id":"clkwe7s0d000dqciqcvyp9sj1"},{"post_id":"clkwe7s070001qciq323q5fm5","tag_id":"clkwe7s0b0009qciq6k090h7a","_id":"clkwe7s0d000eqciqd5imgcyl"},{"post_id":"clkwe7s070001qciq323q5fm5","tag_id":"clkwe7s0c000bqciqetuz8u4z","_id":"clkwe7s0d000gqciqcnacasjm"},{"post_id":"clkwe7s090003qciqha7w3z8o","tag_id":"clkwe7s080002qciq6ef49xfe","_id":"clkwe7s0d000iqciq19xuhh13"},{"post_id":"clkwe7s090003qciqha7w3z8o","tag_id":"clkwe7s0a0004qciq2s665a6b","_id":"clkwe7s0e000jqciqhody3uam"},{"post_id":"clkwe7s090003qciqha7w3z8o","tag_id":"clkwe7s0b0005qciq4epd87mt","_id":"clkwe7s0e000kqciq6trb2ij0"}],"Tag":[{"name":"test","_id":"clkwe0k5b0001pdiqcz7kfg36"},{"name":"software","_id":"clkwe0k5c0002pdiq9baf3lka"},{"name":"javascript","_id":"clkwe0k5d0003pdiq7c627cg3"},{"name":"vitest","_id":"clkwe0k5d0004pdiq19q28lth"},{"name":"aws","_id":"clkwe7s080002qciq6ef49xfe"},{"name":"cloud computing","_id":"clkwe7s0a0004qciq2s665a6b"},{"name":"aws cloud practitioner","_id":"clkwe7s0b0005qciq4epd87mt"},{"name":"transaction","_id":"clkwe7s0b0006qciqhev1a8nn"},{"name":"postgresql","_id":"clkwe7s0b0009qciq6k090h7a"},{"name":"database","_id":"clkwe7s0c000bqciqetuz8u4z"}]}}